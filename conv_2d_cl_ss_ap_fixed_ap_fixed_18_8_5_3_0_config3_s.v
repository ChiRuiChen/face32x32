// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_ss_ap_fixed_ap_fixed_18_8_5_3_0_config3_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_V_dout,
        data_V_V_empty_n,
        data_V_V_read,
        res_V_V_din,
        res_V_V_full_n,
        res_V_V_write
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_pp0_stage0 = 24'd16;
parameter    ap_ST_fsm_state7 = 24'd32;
parameter    ap_ST_fsm_state8 = 24'd64;
parameter    ap_ST_fsm_state9 = 24'd128;
parameter    ap_ST_fsm_state10 = 24'd256;
parameter    ap_ST_fsm_state11 = 24'd512;
parameter    ap_ST_fsm_state12 = 24'd1024;
parameter    ap_ST_fsm_state13 = 24'd2048;
parameter    ap_ST_fsm_state14 = 24'd4096;
parameter    ap_ST_fsm_state15 = 24'd8192;
parameter    ap_ST_fsm_state16 = 24'd16384;
parameter    ap_ST_fsm_state17 = 24'd32768;
parameter    ap_ST_fsm_state18 = 24'd65536;
parameter    ap_ST_fsm_state19 = 24'd131072;
parameter    ap_ST_fsm_state20 = 24'd262144;
parameter    ap_ST_fsm_state21 = 24'd524288;
parameter    ap_ST_fsm_state22 = 24'd1048576;
parameter    ap_ST_fsm_state23 = 24'd2097152;
parameter    ap_ST_fsm_state24 = 24'd4194304;
parameter    ap_ST_fsm_state25 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [17:0] data_V_V_dout;
input   data_V_V_empty_n;
output   data_V_V_read;
output  [17:0] res_V_V_din;
input   res_V_V_full_n;
output   res_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_V_read;
reg res_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [4:0] layer_in_V_6_address0;
reg    layer_in_V_6_ce0;
reg    layer_in_V_6_we0;
wire   [17:0] layer_in_V_6_q0;
reg   [31:0] sX_1;
reg   [31:0] sY_1;
reg   [31:0] pY_1;
reg   [31:0] pX_1;
wire   [4:0] w3_V_address0;
reg    w3_V_ce0;
wire   [446:0] w3_V_q0;
reg    data_V_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln315_fu_1203_p2;
reg    res_V_V_blk_n;
wire    ap_CS_fsm_state24;
reg   [17:0] acc_V_31_0_reg_733;
reg   [17:0] acc_V_30_0_reg_746;
reg   [17:0] acc_V_29_0_reg_759;
reg   [17:0] acc_V_28_0_reg_772;
reg   [17:0] acc_V_27_0_reg_785;
reg   [17:0] acc_V_26_0_reg_798;
reg   [17:0] acc_V_25_0_reg_811;
reg   [17:0] acc_V_24_0_reg_824;
reg   [17:0] acc_V_23_0_reg_837;
reg   [17:0] acc_V_22_0_reg_850;
reg   [17:0] acc_V_21_0_reg_863;
reg   [17:0] acc_V_20_0_reg_876;
reg   [17:0] acc_V_19_0_reg_889;
reg   [17:0] acc_V_18_0_reg_902;
reg   [17:0] acc_V_17_0_reg_915;
reg   [17:0] acc_V_16_0_reg_928;
reg   [17:0] acc_V_15_0_reg_941;
reg   [17:0] acc_V_14_0_reg_954;
reg   [17:0] acc_V_13_0_reg_967;
reg   [17:0] acc_V_12_0_reg_980;
reg   [17:0] acc_V_11_0_reg_993;
reg   [17:0] acc_V_10_0_reg_1006;
reg   [17:0] acc_V_9_0_reg_1019;
reg   [17:0] acc_V_8_0_reg_1032;
reg   [17:0] acc_V_7_0_reg_1045;
reg   [17:0] acc_V_6_0_reg_1058;
reg   [17:0] acc_V_5_0_reg_1071;
reg   [17:0] acc_V_4_0_reg_1084;
reg   [17:0] acc_V_3_0_reg_1097;
reg   [17:0] acc_V_2_0_reg_1110;
reg   [17:0] acc_V_1_0_reg_1123;
reg   [17:0] acc_V_0_0_reg_1136;
reg   [4:0] in_index_reg_1149;
reg    ap_block_state1;
wire   [10:0] i_fu_1197_p2;
reg   [10:0] i_reg_2732;
wire    ap_CS_fsm_state2;
wire   [1:0] i1_fu_1209_p2;
reg    ap_block_state3;
reg   [31:0] sX_1_load_reg_2745;
wire    ap_CS_fsm_state4;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_ready;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done;
wire   [0:0] icmp_ln326_fu_1224_p2;
reg   [0:0] icmp_ln326_reg_2750;
reg   [31:0] sY_1_load_reg_2755;
wire   [0:0] icmp_ln326_4_fu_1234_p2;
reg   [0:0] icmp_ln326_4_reg_2760;
reg   [31:0] pY_1_load_reg_2765;
reg   [31:0] pX_1_load_reg_2771;
wire   [0:0] and_ln326_4_fu_1292_p2;
reg   [0:0] and_ln326_4_reg_2777;
wire   [0:0] icmp_ln324_fu_1298_p2;
reg   [0:0] icmp_ln324_reg_2781;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] ir_fu_1304_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [17:0] acc_0_V_fu_2050_p2;
reg    ap_enable_reg_pp0_iter1;
wire   [17:0] acc_1_V_fu_2056_p2;
wire   [17:0] acc_2_V_fu_2062_p2;
wire   [17:0] acc_3_V_fu_2068_p2;
wire   [17:0] acc_4_V_fu_2074_p2;
wire   [17:0] acc_5_V_fu_2080_p2;
wire   [17:0] acc_6_V_fu_2086_p2;
wire   [17:0] acc_7_V_fu_2092_p2;
wire   [17:0] acc_8_V_fu_2098_p2;
wire   [17:0] acc_9_V_fu_2104_p2;
wire   [17:0] acc_10_V_fu_2110_p2;
wire   [17:0] acc_11_V_fu_2116_p2;
wire   [17:0] acc_12_V_fu_2122_p2;
wire   [17:0] acc_13_V_fu_2128_p2;
wire   [17:0] acc_14_V_fu_2134_p2;
wire   [17:0] acc_15_V_fu_2140_p2;
wire   [17:0] acc_16_V_fu_2146_p2;
wire   [17:0] acc_17_V_fu_2152_p2;
wire   [17:0] acc_18_V_fu_2158_p2;
wire   [17:0] acc_19_V_fu_2164_p2;
wire   [17:0] acc_20_V_fu_2170_p2;
wire   [17:0] acc_21_V_fu_2176_p2;
wire   [17:0] acc_22_V_fu_2182_p2;
wire   [17:0] acc_23_V_fu_2188_p2;
wire   [17:0] acc_24_V_fu_2194_p2;
wire   [17:0] acc_25_V_fu_2200_p2;
wire   [17:0] acc_26_V_fu_2206_p2;
wire   [17:0] acc_27_V_fu_2212_p2;
wire   [17:0] acc_28_V_fu_2218_p2;
wire   [17:0] acc_29_V_fu_2224_p2;
wire   [17:0] acc_30_V_fu_2230_p2;
wire   [17:0] acc_31_V_fu_2236_p2;
wire   [5:0] i_ic_fu_2248_p2;
reg   [5:0] i_ic_reg_2963;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln338_fu_2242_p2;
wire   [0:0] icmp_ln346_fu_2259_p2;
reg   [0:0] icmp_ln346_reg_2973;
wire   [31:0] select_ln356_fu_2326_p3;
wire   [0:0] icmp_ln350_fu_2305_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg   [1:0] tmpdata_V_address0;
reg    tmpdata_V_ce0;
reg    tmpdata_V_we0;
wire   [17:0] tmpdata_V_q0;
reg   [4:0] layer_out_i_address0;
reg    layer_out_i_ce0;
reg    layer_out_i_we0;
reg   [17:0] layer_out_i_d0;
wire   [17:0] layer_out_i_q0;
reg   [4:0] layer_out_i_address1;
reg    layer_out_i_ce1;
reg    layer_out_i_we1;
reg   [17:0] layer_out_i_d1;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_start;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_idle;
wire   [1:0] grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_data_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_data_V_ce0;
wire   [4:0] grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_output_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_output_V_ce0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_output_V_we0;
wire   [17:0] grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_output_V_d0;
reg   [10:0] i_0_i_reg_711;
wire    ap_CS_fsm_state25;
reg   [1:0] i1_0_i_reg_722;
wire   [0:0] icmp_ln313_fu_1191_p2;
wire    ap_block_pp0_stage0;
reg   [5:0] i_ic_0_i_reg_1160;
wire    ap_CS_fsm_state22;
reg   [31:0] storemerge_i_reg_1171;
reg    grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_start_reg;
reg    ap_block_state3_ignore_call0;
wire   [63:0] zext_ln317_fu_1215_p1;
wire   [63:0] zext_ln332_fu_1310_p1;
wire   [63:0] zext_ln340_fu_2254_p1;
wire   [31:0] select_ln361_fu_2280_p3;
wire   [31:0] add_ln354_fu_2310_p2;
wire   [31:0] add_ln359_fu_2264_p2;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire   [30:0] tmp_5_fu_1244_p4;
wire   [30:0] tmp_6_fu_1264_p4;
wire   [0:0] icmp_ln326_5_fu_1254_p2;
wire   [0:0] icmp_ln326_6_fu_1274_p2;
wire   [0:0] and_ln326_3_fu_1286_p2;
wire   [0:0] and_ln326_fu_1280_p2;
wire  signed [13:0] trunc_ln332_fu_1316_p1;
wire  signed [28:0] mul_ln1118_fu_2345_p2;
wire  signed [13:0] tmp_80_fu_1337_p4;
wire  signed [28:0] mul_ln1118_36_fu_2352_p2;
wire  signed [13:0] tmp_81_fu_1360_p4;
wire  signed [28:0] mul_ln1118_37_fu_2359_p2;
wire  signed [13:0] tmp_82_fu_1383_p4;
wire  signed [28:0] mul_ln1118_38_fu_2366_p2;
wire  signed [13:0] tmp_83_fu_1406_p4;
wire  signed [28:0] mul_ln1118_39_fu_2373_p2;
wire  signed [13:0] tmp_84_fu_1429_p4;
wire  signed [28:0] mul_ln1118_40_fu_2380_p2;
wire  signed [13:0] tmp_85_fu_1452_p4;
wire  signed [28:0] mul_ln1118_41_fu_2387_p2;
wire  signed [13:0] tmp_86_fu_1475_p4;
wire  signed [28:0] mul_ln1118_42_fu_2394_p2;
wire  signed [13:0] tmp_87_fu_1498_p4;
wire  signed [28:0] mul_ln1118_43_fu_2401_p2;
wire  signed [13:0] tmp_88_fu_1521_p4;
wire  signed [28:0] mul_ln1118_44_fu_2408_p2;
wire  signed [13:0] tmp_89_fu_1544_p4;
wire  signed [28:0] mul_ln1118_45_fu_2415_p2;
wire  signed [13:0] tmp_90_fu_1567_p4;
wire  signed [28:0] mul_ln1118_46_fu_2422_p2;
wire  signed [13:0] tmp_91_fu_1590_p4;
wire  signed [28:0] mul_ln1118_47_fu_2429_p2;
wire  signed [13:0] tmp_92_fu_1613_p4;
wire  signed [28:0] mul_ln1118_48_fu_2436_p2;
wire  signed [13:0] tmp_93_fu_1636_p4;
wire  signed [28:0] mul_ln1118_49_fu_2443_p2;
wire  signed [13:0] tmp_94_fu_1659_p4;
wire  signed [28:0] mul_ln1118_50_fu_2450_p2;
wire  signed [13:0] tmp_95_fu_1682_p4;
wire  signed [28:0] mul_ln1118_51_fu_2457_p2;
wire  signed [13:0] tmp_96_fu_1705_p4;
wire  signed [28:0] mul_ln1118_52_fu_2464_p2;
wire  signed [13:0] tmp_97_fu_1728_p4;
wire  signed [28:0] mul_ln1118_53_fu_2471_p2;
wire  signed [13:0] tmp_98_fu_1751_p4;
wire  signed [28:0] mul_ln1118_54_fu_2478_p2;
wire  signed [13:0] tmp_99_fu_1774_p4;
wire  signed [28:0] mul_ln1118_55_fu_2485_p2;
wire  signed [13:0] tmp_100_fu_1797_p4;
wire  signed [28:0] mul_ln1118_56_fu_2492_p2;
wire  signed [13:0] tmp_101_fu_1820_p4;
wire  signed [28:0] mul_ln1118_57_fu_2499_p2;
wire  signed [13:0] tmp_102_fu_1843_p4;
wire  signed [28:0] mul_ln1118_58_fu_2506_p2;
wire  signed [13:0] tmp_103_fu_1866_p4;
wire  signed [28:0] mul_ln1118_59_fu_2513_p2;
wire  signed [13:0] tmp_104_fu_1889_p4;
wire  signed [28:0] mul_ln1118_60_fu_2520_p2;
wire  signed [13:0] tmp_105_fu_1912_p4;
wire  signed [28:0] mul_ln1118_61_fu_2527_p2;
wire  signed [13:0] tmp_106_fu_1935_p4;
wire  signed [28:0] mul_ln1118_62_fu_2534_p2;
wire  signed [13:0] tmp_107_fu_1958_p4;
wire  signed [28:0] mul_ln1118_63_fu_2541_p2;
wire  signed [13:0] tmp_108_fu_1981_p4;
wire  signed [28:0] mul_ln1118_64_fu_2548_p2;
wire  signed [13:0] tmp_109_fu_2004_p4;
wire  signed [28:0] mul_ln1118_65_fu_2555_p2;
wire  signed [12:0] tmp_3_fu_2027_p4;
wire  signed [28:0] mul_ln1118_66_fu_2562_p2;
wire   [17:0] trunc_ln_fu_1328_p4;
wire   [17:0] trunc_ln708_s_fu_1351_p4;
wire   [17:0] trunc_ln708_31_fu_1374_p4;
wire   [17:0] trunc_ln708_32_fu_1397_p4;
wire   [17:0] trunc_ln708_33_fu_1420_p4;
wire   [17:0] trunc_ln708_34_fu_1443_p4;
wire   [17:0] trunc_ln708_35_fu_1466_p4;
wire   [17:0] trunc_ln708_36_fu_1489_p4;
wire   [17:0] trunc_ln708_37_fu_1512_p4;
wire   [17:0] trunc_ln708_38_fu_1535_p4;
wire   [17:0] trunc_ln708_39_fu_1558_p4;
wire   [17:0] trunc_ln708_40_fu_1581_p4;
wire   [17:0] trunc_ln708_41_fu_1604_p4;
wire   [17:0] trunc_ln708_42_fu_1627_p4;
wire   [17:0] trunc_ln708_43_fu_1650_p4;
wire   [17:0] trunc_ln708_44_fu_1673_p4;
wire   [17:0] trunc_ln708_45_fu_1696_p4;
wire   [17:0] trunc_ln708_46_fu_1719_p4;
wire   [17:0] trunc_ln708_47_fu_1742_p4;
wire   [17:0] trunc_ln708_48_fu_1765_p4;
wire   [17:0] trunc_ln708_49_fu_1788_p4;
wire   [17:0] trunc_ln708_50_fu_1811_p4;
wire   [17:0] trunc_ln708_51_fu_1834_p4;
wire   [17:0] trunc_ln708_52_fu_1857_p4;
wire   [17:0] trunc_ln708_53_fu_1880_p4;
wire   [17:0] trunc_ln708_54_fu_1903_p4;
wire   [17:0] trunc_ln708_55_fu_1926_p4;
wire   [17:0] trunc_ln708_56_fu_1949_p4;
wire   [17:0] trunc_ln708_57_fu_1972_p4;
wire   [17:0] trunc_ln708_58_fu_1995_p4;
wire   [17:0] trunc_ln708_59_fu_2018_p4;
wire   [17:0] trunc_ln708_60_fu_2041_p4;
wire   [31:0] add_ln361_fu_2275_p2;
wire   [31:0] add_ln356_fu_2321_p2;
wire  signed [17:0] mul_ln1118_fu_2345_p1;
wire  signed [28:0] sext_ln1116_cast_fu_1320_p1;
wire  signed [17:0] mul_ln1118_36_fu_2352_p1;
wire  signed [17:0] mul_ln1118_37_fu_2359_p1;
wire  signed [17:0] mul_ln1118_38_fu_2366_p1;
wire  signed [17:0] mul_ln1118_39_fu_2373_p1;
wire  signed [17:0] mul_ln1118_40_fu_2380_p1;
wire  signed [17:0] mul_ln1118_41_fu_2387_p1;
wire  signed [17:0] mul_ln1118_42_fu_2394_p1;
wire  signed [17:0] mul_ln1118_43_fu_2401_p1;
wire  signed [17:0] mul_ln1118_44_fu_2408_p1;
wire  signed [17:0] mul_ln1118_45_fu_2415_p1;
wire  signed [17:0] mul_ln1118_46_fu_2422_p1;
wire  signed [17:0] mul_ln1118_47_fu_2429_p1;
wire  signed [17:0] mul_ln1118_48_fu_2436_p1;
wire  signed [17:0] mul_ln1118_49_fu_2443_p1;
wire  signed [17:0] mul_ln1118_50_fu_2450_p1;
wire  signed [17:0] mul_ln1118_51_fu_2457_p1;
wire  signed [17:0] mul_ln1118_52_fu_2464_p1;
wire  signed [17:0] mul_ln1118_53_fu_2471_p1;
wire  signed [17:0] mul_ln1118_54_fu_2478_p1;
wire  signed [17:0] mul_ln1118_55_fu_2485_p1;
wire  signed [17:0] mul_ln1118_56_fu_2492_p1;
wire  signed [17:0] mul_ln1118_57_fu_2499_p1;
wire  signed [17:0] mul_ln1118_58_fu_2506_p1;
wire  signed [17:0] mul_ln1118_59_fu_2513_p1;
wire  signed [17:0] mul_ln1118_60_fu_2520_p1;
wire  signed [17:0] mul_ln1118_61_fu_2527_p1;
wire  signed [17:0] mul_ln1118_62_fu_2534_p1;
wire  signed [17:0] mul_ln1118_63_fu_2541_p1;
wire  signed [17:0] mul_ln1118_64_fu_2548_p1;
wire  signed [17:0] mul_ln1118_65_fu_2555_p1;
wire  signed [17:0] mul_ln1118_66_fu_2562_p1;
reg   [23:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_619;
reg    ap_condition_621;
reg    ap_condition_405;
reg    ap_condition_557;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 24'd1;
#0 sX_1 = 32'd0;
#0 sY_1 = 32'd0;
#0 pY_1 = 32'd0;
#0 pX_1 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_start_reg = 1'b0;
end

conv_2d_cl_ss_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_layedEe #(
    .DataWidth( 18 ),
    .AddressRange( 27 ),
    .AddressWidth( 5 ))
layer_in_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_in_V_6_address0),
    .ce0(layer_in_V_6_ce0),
    .we0(layer_in_V_6_we0),
    .d0(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_output_V_d0),
    .q0(layer_in_V_6_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_w3_V #(
    .DataWidth( 447 ),
    .AddressRange( 27 ),
    .AddressWidth( 5 ))
w3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_address0),
    .ce0(w3_V_ce0),
    .q0(w3_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_tmpdeOg #(
    .DataWidth( 18 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
tmpdata_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpdata_V_address0),
    .ce0(tmpdata_V_ce0),
    .we0(tmpdata_V_we0),
    .d0(data_V_V_dout),
    .q0(tmpdata_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_layefYi #(
    .DataWidth( 18 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
layer_out_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_out_i_address0),
    .ce0(layer_out_i_ce0),
    .we0(layer_out_i_we0),
    .d0(layer_out_i_d0),
    .q0(layer_out_i_q0),
    .address1(layer_out_i_address1),
    .ce1(layer_out_i_ce1),
    .we1(layer_out_i_we1),
    .d1(layer_out_i_d1)
);

cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_start),
    .ap_done(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done),
    .ap_idle(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_idle),
    .ap_ready(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_ready),
    .data_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_data_V_address0),
    .data_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_data_V_ce0),
    .data_V_q0(tmpdata_V_q0),
    .output_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_output_V_address0),
    .output_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_output_V_ce0),
    .output_V_we0(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_output_V_we0),
    .output_V_d0(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_output_V_d0),
    .output_V_q0(layer_in_V_6_q0)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U8(
    .din0(trunc_ln332_fu_1316_p1),
    .din1(mul_ln1118_fu_2345_p1),
    .dout(mul_ln1118_fu_2345_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U9(
    .din0(tmp_80_fu_1337_p4),
    .din1(mul_ln1118_36_fu_2352_p1),
    .dout(mul_ln1118_36_fu_2352_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U10(
    .din0(tmp_81_fu_1360_p4),
    .din1(mul_ln1118_37_fu_2359_p1),
    .dout(mul_ln1118_37_fu_2359_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U11(
    .din0(tmp_82_fu_1383_p4),
    .din1(mul_ln1118_38_fu_2366_p1),
    .dout(mul_ln1118_38_fu_2366_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U12(
    .din0(tmp_83_fu_1406_p4),
    .din1(mul_ln1118_39_fu_2373_p1),
    .dout(mul_ln1118_39_fu_2373_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U13(
    .din0(tmp_84_fu_1429_p4),
    .din1(mul_ln1118_40_fu_2380_p1),
    .dout(mul_ln1118_40_fu_2380_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U14(
    .din0(tmp_85_fu_1452_p4),
    .din1(mul_ln1118_41_fu_2387_p1),
    .dout(mul_ln1118_41_fu_2387_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U15(
    .din0(tmp_86_fu_1475_p4),
    .din1(mul_ln1118_42_fu_2394_p1),
    .dout(mul_ln1118_42_fu_2394_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U16(
    .din0(tmp_87_fu_1498_p4),
    .din1(mul_ln1118_43_fu_2401_p1),
    .dout(mul_ln1118_43_fu_2401_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U17(
    .din0(tmp_88_fu_1521_p4),
    .din1(mul_ln1118_44_fu_2408_p1),
    .dout(mul_ln1118_44_fu_2408_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U18(
    .din0(tmp_89_fu_1544_p4),
    .din1(mul_ln1118_45_fu_2415_p1),
    .dout(mul_ln1118_45_fu_2415_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U19(
    .din0(tmp_90_fu_1567_p4),
    .din1(mul_ln1118_46_fu_2422_p1),
    .dout(mul_ln1118_46_fu_2422_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U20(
    .din0(tmp_91_fu_1590_p4),
    .din1(mul_ln1118_47_fu_2429_p1),
    .dout(mul_ln1118_47_fu_2429_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U21(
    .din0(tmp_92_fu_1613_p4),
    .din1(mul_ln1118_48_fu_2436_p1),
    .dout(mul_ln1118_48_fu_2436_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U22(
    .din0(tmp_93_fu_1636_p4),
    .din1(mul_ln1118_49_fu_2443_p1),
    .dout(mul_ln1118_49_fu_2443_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U23(
    .din0(tmp_94_fu_1659_p4),
    .din1(mul_ln1118_50_fu_2450_p1),
    .dout(mul_ln1118_50_fu_2450_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U24(
    .din0(tmp_95_fu_1682_p4),
    .din1(mul_ln1118_51_fu_2457_p1),
    .dout(mul_ln1118_51_fu_2457_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U25(
    .din0(tmp_96_fu_1705_p4),
    .din1(mul_ln1118_52_fu_2464_p1),
    .dout(mul_ln1118_52_fu_2464_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U26(
    .din0(tmp_97_fu_1728_p4),
    .din1(mul_ln1118_53_fu_2471_p1),
    .dout(mul_ln1118_53_fu_2471_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U27(
    .din0(tmp_98_fu_1751_p4),
    .din1(mul_ln1118_54_fu_2478_p1),
    .dout(mul_ln1118_54_fu_2478_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U28(
    .din0(tmp_99_fu_1774_p4),
    .din1(mul_ln1118_55_fu_2485_p1),
    .dout(mul_ln1118_55_fu_2485_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U29(
    .din0(tmp_100_fu_1797_p4),
    .din1(mul_ln1118_56_fu_2492_p1),
    .dout(mul_ln1118_56_fu_2492_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U30(
    .din0(tmp_101_fu_1820_p4),
    .din1(mul_ln1118_57_fu_2499_p1),
    .dout(mul_ln1118_57_fu_2499_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U31(
    .din0(tmp_102_fu_1843_p4),
    .din1(mul_ln1118_58_fu_2506_p1),
    .dout(mul_ln1118_58_fu_2506_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U32(
    .din0(tmp_103_fu_1866_p4),
    .din1(mul_ln1118_59_fu_2513_p1),
    .dout(mul_ln1118_59_fu_2513_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U33(
    .din0(tmp_104_fu_1889_p4),
    .din1(mul_ln1118_60_fu_2520_p1),
    .dout(mul_ln1118_60_fu_2520_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U34(
    .din0(tmp_105_fu_1912_p4),
    .din1(mul_ln1118_61_fu_2527_p1),
    .dout(mul_ln1118_61_fu_2527_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U35(
    .din0(tmp_106_fu_1935_p4),
    .din1(mul_ln1118_62_fu_2534_p1),
    .dout(mul_ln1118_62_fu_2534_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U36(
    .din0(tmp_107_fu_1958_p4),
    .din1(mul_ln1118_63_fu_2541_p1),
    .dout(mul_ln1118_63_fu_2541_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U37(
    .din0(tmp_108_fu_1981_p4),
    .din1(mul_ln1118_64_fu_2548_p1),
    .dout(mul_ln1118_64_fu_2548_p2)
);

myproject_mul_mul_14s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_14s_18s_29_1_1_U38(
    .din0(tmp_109_fu_2004_p4),
    .din1(mul_ln1118_65_fu_2555_p1),
    .dout(mul_ln1118_65_fu_2555_p2)
);

myproject_mul_mul_13s_18s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 29 ))
myproject_mul_mul_13s_18s_29_1_1_U39(
    .din0(tmp_3_fu_2027_p4),
    .din1(mul_ln1118_66_fu_2562_p1),
    .dout(mul_ln1118_66_fu_2562_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln313_fu_1191_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_start_reg <= 1'b0;
    end else begin
        if ((~((icmp_ln315_fu_1203_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1203_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_start_reg <= 1'b1;
        end else if ((grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_ready == 1'b1)) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_0_0_reg_1136 <= acc_0_V_fu_2050_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_0_0_reg_1136 <= 18'd32;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_10_0_reg_1006 <= acc_10_V_fu_2110_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_10_0_reg_1006 <= 18'd262127;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_11_0_reg_993 <= acc_11_V_fu_2116_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_11_0_reg_993 <= 18'd23;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_12_0_reg_980 <= acc_12_V_fu_2122_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_12_0_reg_980 <= 18'd261832;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_13_0_reg_967 <= acc_13_V_fu_2128_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_13_0_reg_967 <= 18'd129;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_14_0_reg_954 <= acc_14_V_fu_2134_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_14_0_reg_954 <= 18'd67;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_15_0_reg_941 <= acc_15_V_fu_2140_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_15_0_reg_941 <= 18'd262067;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_16_0_reg_928 <= acc_16_V_fu_2146_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_16_0_reg_928 <= 18'd262140;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_17_0_reg_915 <= acc_17_V_fu_2152_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_17_0_reg_915 <= 18'd262021;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_18_0_reg_902 <= acc_18_V_fu_2158_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_18_0_reg_902 <= 18'd94;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_19_0_reg_889 <= acc_19_V_fu_2164_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_19_0_reg_889 <= 18'd250;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_1_0_reg_1123 <= acc_1_V_fu_2056_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_1_0_reg_1123 <= 18'd262037;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_20_0_reg_876 <= acc_20_V_fu_2170_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_20_0_reg_876 <= 18'd261659;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_21_0_reg_863 <= acc_21_V_fu_2176_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_21_0_reg_863 <= 18'd261986;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_22_0_reg_850 <= acc_22_V_fu_2182_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_22_0_reg_850 <= 18'd54;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_23_0_reg_837 <= acc_23_V_fu_2188_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_23_0_reg_837 <= 18'd3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_24_0_reg_824 <= acc_24_V_fu_2194_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_24_0_reg_824 <= 18'd16;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_25_0_reg_811 <= acc_25_V_fu_2200_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_25_0_reg_811 <= 18'd261776;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_26_0_reg_798 <= acc_26_V_fu_2206_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_26_0_reg_798 <= 18'd261890;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_27_0_reg_785 <= acc_27_V_fu_2212_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_27_0_reg_785 <= 18'd261909;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_28_0_reg_772 <= acc_28_V_fu_2218_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_28_0_reg_772 <= 18'd46;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_29_0_reg_759 <= acc_29_V_fu_2224_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_29_0_reg_759 <= 18'd261951;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_2_0_reg_1110 <= acc_2_V_fu_2062_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_2_0_reg_1110 <= 18'd261849;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_30_0_reg_746 <= acc_30_V_fu_2230_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_30_0_reg_746 <= 18'd262135;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_31_0_reg_733 <= acc_31_V_fu_2236_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_31_0_reg_733 <= 18'd261983;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_3_0_reg_1097 <= acc_3_V_fu_2068_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_3_0_reg_1097 <= 18'd262110;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_4_0_reg_1084 <= acc_4_V_fu_2074_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_4_0_reg_1084 <= 18'd63;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_5_0_reg_1071 <= acc_5_V_fu_2080_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_5_0_reg_1071 <= 18'd30;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_6_0_reg_1058 <= acc_6_V_fu_2086_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_6_0_reg_1058 <= 18'd261022;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_7_0_reg_1045 <= acc_7_V_fu_2092_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_7_0_reg_1045 <= 18'd46;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_8_0_reg_1032 <= acc_8_V_fu_2098_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_8_0_reg_1032 <= 18'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2781 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_9_0_reg_1019 <= acc_9_V_fu_2104_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_9_0_reg_1019 <= 18'd262132;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln315_fu_1203_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i1_0_i_reg_722 <= i1_fu_1209_p2;
    end else if (((icmp_ln313_fu_1191_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i1_0_i_reg_722 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        i_0_i_reg_711 <= i_reg_2732;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_711 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        i_ic_0_i_reg_1160 <= i_ic_reg_2963;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        i_ic_0_i_reg_1160 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_1298_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_index_reg_1149 <= ir_fu_1304_p2;
    end else if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        in_index_reg_1149 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_621)) begin
            pX_1 <= 32'd0;
        end else if ((1'b1 == ap_condition_619)) begin
            pX_1 <= add_ln359_fu_2264_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_557)) begin
            pY_1 <= 32'd0;
        end else if ((1'b1 == ap_condition_405)) begin
            pY_1 <= add_ln354_fu_2310_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_621)) begin
            sX_1 <= 32'd0;
        end else if ((1'b1 == ap_condition_619)) begin
            sX_1 <= select_ln361_fu_2280_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_557)) begin
            storemerge_i_reg_1171 <= 32'd0;
        end else if ((1'b1 == ap_condition_405)) begin
            storemerge_i_reg_1171 <= select_ln356_fu_2326_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        and_ln326_4_reg_2777 <= and_ln326_4_fu_1292_p2;
        icmp_ln326_4_reg_2760 <= icmp_ln326_4_fu_1234_p2;
        icmp_ln326_reg_2750 <= icmp_ln326_fu_1224_p2;
        pX_1_load_reg_2771 <= pX_1;
        pY_1_load_reg_2765 <= pY_1;
        sX_1_load_reg_2745 <= sX_1;
        sY_1_load_reg_2755 <= sY_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln326_4_reg_2777) & (1'b1 == ap_CS_fsm_state23))) begin
        i_ic_reg_2963 <= i_ic_fu_2248_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_2732 <= i_fu_1197_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln324_reg_2781 <= icmp_ln324_fu_1298_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & ((1'd0 == and_ln326_4_reg_2777) | (icmp_ln338_fu_2242_p2 == 1'd1)))) begin
        icmp_ln346_reg_2973 <= icmp_ln346_fu_2259_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln346_reg_2973 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        sY_1 <= storemerge_i_reg_1171;
    end
end

always @ (*) begin
    if ((icmp_ln324_fu_1298_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_1191_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln315_fu_1203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_V_blk_n = data_V_V_empty_n;
    end else begin
        data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_1203_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_V_read = 1'b1;
    end else begin
        data_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_1191_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_6_address0 = zext_ln332_fu_1310_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_6_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_output_V_address0;
    end else begin
        layer_in_V_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_6_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_output_V_ce0;
    end else begin
        layer_in_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_6_we0 = grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_output_V_we0;
    end else begin
        layer_in_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_out_i_address0 = zext_ln340_fu_2254_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address0 = 64'd0;
    end else begin
        layer_out_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address1 = 64'd1;
    end else begin
        layer_out_i_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23))) begin
        layer_out_i_ce0 = 1'b1;
    end else begin
        layer_out_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state22))) begin
        layer_out_i_ce1 = 1'b1;
    end else begin
        layer_out_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_d0 = acc_V_30_0_reg_746;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_d0 = acc_V_28_0_reg_772;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_d0 = acc_V_26_0_reg_798;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_d0 = acc_V_24_0_reg_824;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_d0 = acc_V_22_0_reg_850;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_d0 = acc_V_20_0_reg_876;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_d0 = acc_V_18_0_reg_902;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_d0 = acc_V_16_0_reg_928;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d0 = acc_V_14_0_reg_954;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d0 = acc_V_12_0_reg_980;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d0 = acc_V_10_0_reg_1006;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d0 = acc_V_8_0_reg_1032;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d0 = acc_V_6_0_reg_1058;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d0 = acc_V_4_0_reg_1084;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d0 = acc_V_2_0_reg_1110;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d0 = acc_V_0_0_reg_1136;
    end else begin
        layer_out_i_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_d1 = acc_V_31_0_reg_733;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_d1 = acc_V_29_0_reg_759;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_d1 = acc_V_27_0_reg_785;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_d1 = acc_V_25_0_reg_811;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_d1 = acc_V_23_0_reg_837;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_d1 = acc_V_21_0_reg_863;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_d1 = acc_V_19_0_reg_889;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_d1 = acc_V_17_0_reg_915;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d1 = acc_V_15_0_reg_941;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d1 = acc_V_13_0_reg_967;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d1 = acc_V_11_0_reg_993;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d1 = acc_V_9_0_reg_1019;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d1 = acc_V_7_0_reg_1045;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d1 = acc_V_5_0_reg_1071;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d1 = acc_V_3_0_reg_1097;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d1 = acc_V_1_0_reg_1123;
    end else begin
        layer_out_i_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state22))) begin
        layer_out_i_we0 = 1'b1;
    end else begin
        layer_out_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state22))) begin
        layer_out_i_we1 = 1'b1;
    end else begin
        layer_out_i_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        res_V_V_blk_n = res_V_V_full_n;
    end else begin
        res_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        res_V_V_write = 1'b1;
    end else begin
        res_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln315_fu_1203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_address0 = zext_ln317_fu_1215_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_data_V_address0;
    end else begin
        tmpdata_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_1203_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_data_V_ce0;
    end else begin
        tmpdata_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_1203_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_we0 = 1'b1;
    end else begin
        tmpdata_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w3_V_ce0 = 1'b1;
    end else begin
        w3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln313_fu_1191_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((icmp_ln315_fu_1203_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((icmp_ln315_fu_1203_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1203_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'd1 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'd0 == and_ln326_4_fu_1292_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_fu_1298_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_fu_1298_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & ((1'd0 == and_ln326_4_reg_2777) | (icmp_ln338_fu_2242_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_fu_2050_p2 = (acc_V_0_0_reg_1136 + trunc_ln_fu_1328_p4);

assign acc_10_V_fu_2110_p2 = (acc_V_10_0_reg_1006 + trunc_ln708_39_fu_1558_p4);

assign acc_11_V_fu_2116_p2 = (acc_V_11_0_reg_993 + trunc_ln708_40_fu_1581_p4);

assign acc_12_V_fu_2122_p2 = (acc_V_12_0_reg_980 + trunc_ln708_41_fu_1604_p4);

assign acc_13_V_fu_2128_p2 = (acc_V_13_0_reg_967 + trunc_ln708_42_fu_1627_p4);

assign acc_14_V_fu_2134_p2 = (acc_V_14_0_reg_954 + trunc_ln708_43_fu_1650_p4);

assign acc_15_V_fu_2140_p2 = (acc_V_15_0_reg_941 + trunc_ln708_44_fu_1673_p4);

assign acc_16_V_fu_2146_p2 = (acc_V_16_0_reg_928 + trunc_ln708_45_fu_1696_p4);

assign acc_17_V_fu_2152_p2 = (acc_V_17_0_reg_915 + trunc_ln708_46_fu_1719_p4);

assign acc_18_V_fu_2158_p2 = (acc_V_18_0_reg_902 + trunc_ln708_47_fu_1742_p4);

assign acc_19_V_fu_2164_p2 = (acc_V_19_0_reg_889 + trunc_ln708_48_fu_1765_p4);

assign acc_1_V_fu_2056_p2 = (acc_V_1_0_reg_1123 + trunc_ln708_s_fu_1351_p4);

assign acc_20_V_fu_2170_p2 = (acc_V_20_0_reg_876 + trunc_ln708_49_fu_1788_p4);

assign acc_21_V_fu_2176_p2 = (acc_V_21_0_reg_863 + trunc_ln708_50_fu_1811_p4);

assign acc_22_V_fu_2182_p2 = (acc_V_22_0_reg_850 + trunc_ln708_51_fu_1834_p4);

assign acc_23_V_fu_2188_p2 = (acc_V_23_0_reg_837 + trunc_ln708_52_fu_1857_p4);

assign acc_24_V_fu_2194_p2 = (acc_V_24_0_reg_824 + trunc_ln708_53_fu_1880_p4);

assign acc_25_V_fu_2200_p2 = (acc_V_25_0_reg_811 + trunc_ln708_54_fu_1903_p4);

assign acc_26_V_fu_2206_p2 = (acc_V_26_0_reg_798 + trunc_ln708_55_fu_1926_p4);

assign acc_27_V_fu_2212_p2 = (acc_V_27_0_reg_785 + trunc_ln708_56_fu_1949_p4);

assign acc_28_V_fu_2218_p2 = (acc_V_28_0_reg_772 + trunc_ln708_57_fu_1972_p4);

assign acc_29_V_fu_2224_p2 = (acc_V_29_0_reg_759 + trunc_ln708_58_fu_1995_p4);

assign acc_2_V_fu_2062_p2 = (acc_V_2_0_reg_1110 + trunc_ln708_31_fu_1374_p4);

assign acc_30_V_fu_2230_p2 = (acc_V_30_0_reg_746 + trunc_ln708_59_fu_2018_p4);

assign acc_31_V_fu_2236_p2 = (acc_V_31_0_reg_733 + trunc_ln708_60_fu_2041_p4);

assign acc_3_V_fu_2068_p2 = (acc_V_3_0_reg_1097 + trunc_ln708_32_fu_1397_p4);

assign acc_4_V_fu_2074_p2 = (acc_V_4_0_reg_1084 + trunc_ln708_33_fu_1420_p4);

assign acc_5_V_fu_2080_p2 = (acc_V_5_0_reg_1071 + trunc_ln708_34_fu_1443_p4);

assign acc_6_V_fu_2086_p2 = (acc_V_6_0_reg_1058 + trunc_ln708_35_fu_1466_p4);

assign acc_7_V_fu_2092_p2 = (acc_V_7_0_reg_1045 + trunc_ln708_36_fu_1489_p4);

assign acc_8_V_fu_2098_p2 = (acc_V_8_0_reg_1032 + trunc_ln708_37_fu_1512_p4);

assign acc_9_V_fu_2104_p2 = (acc_V_9_0_reg_1019 + trunc_ln708_38_fu_1535_p4);

assign add_ln354_fu_2310_p2 = (pY_1_load_reg_2765 + 32'd1);

assign add_ln356_fu_2321_p2 = (sY_1_load_reg_2755 + 32'd1);

assign add_ln359_fu_2264_p2 = (pX_1_load_reg_2771 + 32'd1);

assign add_ln361_fu_2275_p2 = (sX_1_load_reg_2745 + 32'd1);

assign and_ln326_3_fu_1286_p2 = (icmp_ln326_6_fu_1274_p2 & icmp_ln326_5_fu_1254_p2);

assign and_ln326_4_fu_1292_p2 = (and_ln326_fu_1280_p2 & and_ln326_3_fu_1286_p2);

assign and_ln326_fu_1280_p2 = (icmp_ln326_fu_1224_p2 & icmp_ln326_4_fu_1234_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((icmp_ln315_fu_1203_p2 == 1'd0) & (data_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_ignore_call0 = ((icmp_ln315_fu_1203_p2 == 1'd0) & (data_V_V_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_405 = (((icmp_ln350_fu_2305_p2 == 1'd0) & (1'd0 == and_ln326_4_reg_2777) & (icmp_ln346_fu_2259_p2 == 1'd1)) | ((icmp_ln350_fu_2305_p2 == 1'd0) & (icmp_ln346_fu_2259_p2 == 1'd1) & (icmp_ln338_fu_2242_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_557 = (((1'd0 == and_ln326_4_reg_2777) & (icmp_ln350_fu_2305_p2 == 1'd1) & (icmp_ln346_fu_2259_p2 == 1'd1)) | ((icmp_ln350_fu_2305_p2 == 1'd1) & (icmp_ln346_fu_2259_p2 == 1'd1) & (icmp_ln338_fu_2242_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_619 = (((icmp_ln346_fu_2259_p2 == 1'd0) & (1'd0 == and_ln326_4_reg_2777)) | ((icmp_ln346_fu_2259_p2 == 1'd0) & (icmp_ln338_fu_2242_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_621 = (((1'd0 == and_ln326_4_reg_2777) & (icmp_ln346_fu_2259_p2 == 1'd1)) | ((icmp_ln346_fu_2259_p2 == 1'd1) & (icmp_ln338_fu_2242_p2 == 1'd1)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_start = grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config3_s_fu_1182_ap_start_reg;

assign i1_fu_1209_p2 = (i1_0_i_reg_722 + 2'd1);

assign i_fu_1197_p2 = (i_0_i_reg_711 + 11'd1);

assign i_ic_fu_2248_p2 = (i_ic_0_i_reg_1160 + 6'd1);

assign icmp_ln313_fu_1191_p2 = ((i_0_i_reg_711 == 11'd1156) ? 1'b1 : 1'b0);

assign icmp_ln315_fu_1203_p2 = ((i1_0_i_reg_722 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln324_fu_1298_p2 = ((in_index_reg_1149 == 5'd27) ? 1'b1 : 1'b0);

assign icmp_ln326_4_fu_1234_p2 = ((sY_1 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln326_5_fu_1254_p2 = (($signed(tmp_5_fu_1244_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln326_6_fu_1274_p2 = (($signed(tmp_6_fu_1264_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln326_fu_1224_p2 = ((sX_1 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln338_fu_2242_p2 = ((i_ic_0_i_reg_1160 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln346_fu_2259_p2 = ((pX_1_load_reg_2771 == 32'd33) ? 1'b1 : 1'b0);

assign icmp_ln350_fu_2305_p2 = ((pY_1_load_reg_2765 == 32'd33) ? 1'b1 : 1'b0);

assign ir_fu_1304_p2 = (in_index_reg_1149 + 5'd1);

assign mul_ln1118_36_fu_2352_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_37_fu_2359_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_38_fu_2366_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_39_fu_2373_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_40_fu_2380_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_41_fu_2387_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_42_fu_2394_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_43_fu_2401_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_44_fu_2408_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_45_fu_2415_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_46_fu_2422_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_47_fu_2429_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_48_fu_2436_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_49_fu_2443_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_50_fu_2450_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_51_fu_2457_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_52_fu_2464_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_53_fu_2471_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_54_fu_2478_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_55_fu_2485_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_56_fu_2492_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_57_fu_2499_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_58_fu_2506_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_59_fu_2513_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_60_fu_2520_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_61_fu_2527_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_62_fu_2534_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_63_fu_2541_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_64_fu_2548_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_65_fu_2555_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_66_fu_2562_p1 = sext_ln1116_cast_fu_1320_p1;

assign mul_ln1118_fu_2345_p1 = sext_ln1116_cast_fu_1320_p1;

assign res_V_V_din = layer_out_i_q0;

assign select_ln356_fu_2326_p3 = ((icmp_ln326_4_reg_2760[0:0] === 1'b1) ? 32'd2 : add_ln356_fu_2321_p2);

assign select_ln361_fu_2280_p3 = ((icmp_ln326_reg_2750[0:0] === 1'b1) ? 32'd2 : add_ln361_fu_2275_p2);

assign sext_ln1116_cast_fu_1320_p1 = $signed(layer_in_V_6_q0);

assign start_out = real_start;

assign tmp_100_fu_1797_p4 = {{w3_V_q0[307:294]}};

assign tmp_101_fu_1820_p4 = {{w3_V_q0[321:308]}};

assign tmp_102_fu_1843_p4 = {{w3_V_q0[335:322]}};

assign tmp_103_fu_1866_p4 = {{w3_V_q0[349:336]}};

assign tmp_104_fu_1889_p4 = {{w3_V_q0[363:350]}};

assign tmp_105_fu_1912_p4 = {{w3_V_q0[377:364]}};

assign tmp_106_fu_1935_p4 = {{w3_V_q0[391:378]}};

assign tmp_107_fu_1958_p4 = {{w3_V_q0[405:392]}};

assign tmp_108_fu_1981_p4 = {{w3_V_q0[419:406]}};

assign tmp_109_fu_2004_p4 = {{w3_V_q0[433:420]}};

assign tmp_3_fu_2027_p4 = {{w3_V_q0[446:434]}};

assign tmp_5_fu_1244_p4 = {{pY_1[31:1]}};

assign tmp_6_fu_1264_p4 = {{pX_1[31:1]}};

assign tmp_80_fu_1337_p4 = {{w3_V_q0[27:14]}};

assign tmp_81_fu_1360_p4 = {{w3_V_q0[41:28]}};

assign tmp_82_fu_1383_p4 = {{w3_V_q0[55:42]}};

assign tmp_83_fu_1406_p4 = {{w3_V_q0[69:56]}};

assign tmp_84_fu_1429_p4 = {{w3_V_q0[83:70]}};

assign tmp_85_fu_1452_p4 = {{w3_V_q0[97:84]}};

assign tmp_86_fu_1475_p4 = {{w3_V_q0[111:98]}};

assign tmp_87_fu_1498_p4 = {{w3_V_q0[125:112]}};

assign tmp_88_fu_1521_p4 = {{w3_V_q0[139:126]}};

assign tmp_89_fu_1544_p4 = {{w3_V_q0[153:140]}};

assign tmp_90_fu_1567_p4 = {{w3_V_q0[167:154]}};

assign tmp_91_fu_1590_p4 = {{w3_V_q0[181:168]}};

assign tmp_92_fu_1613_p4 = {{w3_V_q0[195:182]}};

assign tmp_93_fu_1636_p4 = {{w3_V_q0[209:196]}};

assign tmp_94_fu_1659_p4 = {{w3_V_q0[223:210]}};

assign tmp_95_fu_1682_p4 = {{w3_V_q0[237:224]}};

assign tmp_96_fu_1705_p4 = {{w3_V_q0[251:238]}};

assign tmp_97_fu_1728_p4 = {{w3_V_q0[265:252]}};

assign tmp_98_fu_1751_p4 = {{w3_V_q0[279:266]}};

assign tmp_99_fu_1774_p4 = {{w3_V_q0[293:280]}};

assign trunc_ln332_fu_1316_p1 = w3_V_q0[13:0];

assign trunc_ln708_31_fu_1374_p4 = {{mul_ln1118_37_fu_2359_p2[28:11]}};

assign trunc_ln708_32_fu_1397_p4 = {{mul_ln1118_38_fu_2366_p2[28:11]}};

assign trunc_ln708_33_fu_1420_p4 = {{mul_ln1118_39_fu_2373_p2[28:11]}};

assign trunc_ln708_34_fu_1443_p4 = {{mul_ln1118_40_fu_2380_p2[28:11]}};

assign trunc_ln708_35_fu_1466_p4 = {{mul_ln1118_41_fu_2387_p2[28:11]}};

assign trunc_ln708_36_fu_1489_p4 = {{mul_ln1118_42_fu_2394_p2[28:11]}};

assign trunc_ln708_37_fu_1512_p4 = {{mul_ln1118_43_fu_2401_p2[28:11]}};

assign trunc_ln708_38_fu_1535_p4 = {{mul_ln1118_44_fu_2408_p2[28:11]}};

assign trunc_ln708_39_fu_1558_p4 = {{mul_ln1118_45_fu_2415_p2[28:11]}};

assign trunc_ln708_40_fu_1581_p4 = {{mul_ln1118_46_fu_2422_p2[28:11]}};

assign trunc_ln708_41_fu_1604_p4 = {{mul_ln1118_47_fu_2429_p2[28:11]}};

assign trunc_ln708_42_fu_1627_p4 = {{mul_ln1118_48_fu_2436_p2[28:11]}};

assign trunc_ln708_43_fu_1650_p4 = {{mul_ln1118_49_fu_2443_p2[28:11]}};

assign trunc_ln708_44_fu_1673_p4 = {{mul_ln1118_50_fu_2450_p2[28:11]}};

assign trunc_ln708_45_fu_1696_p4 = {{mul_ln1118_51_fu_2457_p2[28:11]}};

assign trunc_ln708_46_fu_1719_p4 = {{mul_ln1118_52_fu_2464_p2[28:11]}};

assign trunc_ln708_47_fu_1742_p4 = {{mul_ln1118_53_fu_2471_p2[28:11]}};

assign trunc_ln708_48_fu_1765_p4 = {{mul_ln1118_54_fu_2478_p2[28:11]}};

assign trunc_ln708_49_fu_1788_p4 = {{mul_ln1118_55_fu_2485_p2[28:11]}};

assign trunc_ln708_50_fu_1811_p4 = {{mul_ln1118_56_fu_2492_p2[28:11]}};

assign trunc_ln708_51_fu_1834_p4 = {{mul_ln1118_57_fu_2499_p2[28:11]}};

assign trunc_ln708_52_fu_1857_p4 = {{mul_ln1118_58_fu_2506_p2[28:11]}};

assign trunc_ln708_53_fu_1880_p4 = {{mul_ln1118_59_fu_2513_p2[28:11]}};

assign trunc_ln708_54_fu_1903_p4 = {{mul_ln1118_60_fu_2520_p2[28:11]}};

assign trunc_ln708_55_fu_1926_p4 = {{mul_ln1118_61_fu_2527_p2[28:11]}};

assign trunc_ln708_56_fu_1949_p4 = {{mul_ln1118_62_fu_2534_p2[28:11]}};

assign trunc_ln708_57_fu_1972_p4 = {{mul_ln1118_63_fu_2541_p2[28:11]}};

assign trunc_ln708_58_fu_1995_p4 = {{mul_ln1118_64_fu_2548_p2[28:11]}};

assign trunc_ln708_59_fu_2018_p4 = {{mul_ln1118_65_fu_2555_p2[28:11]}};

assign trunc_ln708_60_fu_2041_p4 = {{mul_ln1118_66_fu_2562_p2[28:11]}};

assign trunc_ln708_s_fu_1351_p4 = {{mul_ln1118_36_fu_2352_p2[28:11]}};

assign trunc_ln_fu_1328_p4 = {{mul_ln1118_fu_2345_p2[28:11]}};

assign w3_V_address0 = zext_ln332_fu_1310_p1;

assign zext_ln317_fu_1215_p1 = i1_0_i_reg_722;

assign zext_ln332_fu_1310_p1 = in_index_reg_1149;

assign zext_ln340_fu_2254_p1 = i_ic_0_i_reg_1160;

endmodule //conv_2d_cl_ss_ap_fixed_ap_fixed_18_8_5_3_0_config3_s
