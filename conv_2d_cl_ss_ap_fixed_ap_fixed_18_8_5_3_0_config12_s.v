// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_ss_ap_fixed_ap_fixed_18_8_5_3_0_config12_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_V_dout,
        data_V_V_empty_n,
        data_V_V_read,
        res_V_V_din,
        res_V_V_full_n,
        res_V_V_write
);

parameter    ap_ST_fsm_state1 = 32'd1;
parameter    ap_ST_fsm_state2 = 32'd2;
parameter    ap_ST_fsm_state3 = 32'd4;
parameter    ap_ST_fsm_state4 = 32'd8;
parameter    ap_ST_fsm_pp0_stage0 = 32'd16;
parameter    ap_ST_fsm_state7 = 32'd32;
parameter    ap_ST_fsm_state8 = 32'd64;
parameter    ap_ST_fsm_state9 = 32'd128;
parameter    ap_ST_fsm_state10 = 32'd256;
parameter    ap_ST_fsm_state11 = 32'd512;
parameter    ap_ST_fsm_state12 = 32'd1024;
parameter    ap_ST_fsm_state13 = 32'd2048;
parameter    ap_ST_fsm_state14 = 32'd4096;
parameter    ap_ST_fsm_state15 = 32'd8192;
parameter    ap_ST_fsm_state16 = 32'd16384;
parameter    ap_ST_fsm_state17 = 32'd32768;
parameter    ap_ST_fsm_state18 = 32'd65536;
parameter    ap_ST_fsm_state19 = 32'd131072;
parameter    ap_ST_fsm_state20 = 32'd262144;
parameter    ap_ST_fsm_state21 = 32'd524288;
parameter    ap_ST_fsm_state22 = 32'd1048576;
parameter    ap_ST_fsm_state23 = 32'd2097152;
parameter    ap_ST_fsm_state24 = 32'd4194304;
parameter    ap_ST_fsm_state25 = 32'd8388608;
parameter    ap_ST_fsm_state26 = 32'd16777216;
parameter    ap_ST_fsm_state27 = 32'd33554432;
parameter    ap_ST_fsm_state28 = 32'd67108864;
parameter    ap_ST_fsm_state29 = 32'd134217728;
parameter    ap_ST_fsm_state30 = 32'd268435456;
parameter    ap_ST_fsm_state31 = 32'd536870912;
parameter    ap_ST_fsm_state32 = 32'd1073741824;
parameter    ap_ST_fsm_state33 = 32'd2147483648;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [17:0] data_V_V_dout;
input   data_V_V_empty_n;
output   data_V_V_read;
output  [17:0] res_V_V_din;
input   res_V_V_full_n;
output   res_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_V_read;
reg res_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [31:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [8:0] layer_in_V_address0;
reg    layer_in_V_ce0;
reg    layer_in_V_we0;
wire  signed [17:0] layer_in_V_q0;
reg   [31:0] sX_5;
reg   [31:0] sY_5;
reg   [31:0] pY_5;
reg   [31:0] pX_5;
wire   [8:0] w12_V_address0;
reg    w12_V_ce0;
wire   [670:0] w12_V_q0;
reg    data_V_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln315_fu_1603_p2;
reg    res_V_V_blk_n;
wire    ap_CS_fsm_state32;
reg   [17:0] acc_V_47_0_reg_973;
reg   [17:0] acc_V_46_0_reg_985;
reg   [17:0] acc_V_45_0_reg_997;
reg   [17:0] acc_V_44_0_reg_1009;
reg   [17:0] acc_V_43_0_reg_1021;
reg   [17:0] acc_V_42_0_reg_1033;
reg   [17:0] acc_V_41_0_reg_1045;
reg   [17:0] acc_V_40_0_reg_1057;
reg   [17:0] acc_V_39_0_reg_1069;
reg   [17:0] acc_V_38_0_reg_1081;
reg   [17:0] acc_V_37_0_reg_1093;
reg   [17:0] acc_V_36_0_reg_1105;
reg   [17:0] acc_V_35_0_reg_1117;
reg   [17:0] acc_V_34_0_reg_1129;
reg   [17:0] acc_V_33_0_reg_1141;
reg   [17:0] acc_V_32_0_reg_1153;
reg   [17:0] acc_V_31_0_reg_1165;
reg   [17:0] acc_V_30_0_reg_1177;
reg   [17:0] acc_V_29_0_reg_1189;
reg   [17:0] acc_V_28_0_reg_1201;
reg   [17:0] acc_V_27_0_reg_1213;
reg   [17:0] acc_V_26_0_reg_1225;
reg   [17:0] acc_V_25_0_reg_1237;
reg   [17:0] acc_V_24_0_reg_1249;
reg   [17:0] acc_V_23_0_reg_1261;
reg   [17:0] acc_V_22_0_reg_1273;
reg   [17:0] acc_V_21_0_reg_1285;
reg   [17:0] acc_V_20_0_reg_1297;
reg   [17:0] acc_V_19_0_reg_1309;
reg   [17:0] acc_V_18_0_reg_1321;
reg   [17:0] acc_V_17_0_reg_1333;
reg   [17:0] acc_V_16_0_reg_1345;
reg   [17:0] acc_V_15_0_reg_1357;
reg   [17:0] acc_V_14_0_reg_1369;
reg   [17:0] acc_V_13_0_reg_1381;
reg   [17:0] acc_V_12_0_reg_1393;
reg   [17:0] acc_V_11_0_reg_1405;
reg   [17:0] acc_V_10_0_reg_1417;
reg   [17:0] acc_V_9_0_reg_1429;
reg   [17:0] acc_V_8_0_reg_1441;
reg   [17:0] acc_V_7_0_reg_1453;
reg   [17:0] acc_V_6_0_reg_1465;
reg   [17:0] acc_V_5_0_reg_1477;
reg   [17:0] acc_V_4_0_reg_1489;
reg   [17:0] acc_V_3_0_reg_1501;
reg   [17:0] acc_V_2_0_reg_1513;
reg   [17:0] acc_V_1_0_reg_1525;
reg   [17:0] acc_V_0_0_reg_1537;
reg   [8:0] in_index_reg_1549;
reg    ap_block_state1;
wire   [8:0] i_fu_1597_p2;
reg   [8:0] i_reg_4086;
wire    ap_CS_fsm_state2;
wire   [5:0] i1_fu_1609_p2;
reg    ap_block_state3;
reg   [31:0] sX_5_load_reg_4099;
wire    ap_CS_fsm_state4;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_ready;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done;
wire   [0:0] icmp_ln326_fu_1624_p2;
reg   [0:0] icmp_ln326_reg_4104;
reg   [31:0] sY_5_load_reg_4109;
wire   [0:0] icmp_ln326_16_fu_1634_p2;
reg   [0:0] icmp_ln326_16_reg_4114;
reg   [31:0] pY_5_load_reg_4119;
reg   [31:0] pX_5_load_reg_4125;
wire   [0:0] and_ln326_12_fu_1692_p2;
reg   [0:0] and_ln326_12_reg_4131;
wire   [0:0] icmp_ln324_fu_1698_p2;
reg   [0:0] icmp_ln324_reg_4135;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [8:0] ir_fu_1704_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [17:0] acc_0_V_fu_2826_p2;
reg    ap_enable_reg_pp0_iter1;
wire   [17:0] acc_1_V_fu_2832_p2;
wire   [17:0] acc_2_V_fu_2838_p2;
wire   [17:0] acc_3_V_fu_2844_p2;
wire   [17:0] acc_4_V_fu_2850_p2;
wire   [17:0] acc_5_V_fu_2856_p2;
wire   [17:0] acc_6_V_fu_2862_p2;
wire   [17:0] acc_7_V_fu_2868_p2;
wire   [17:0] acc_8_V_fu_2874_p2;
wire   [17:0] acc_9_V_fu_2880_p2;
wire   [17:0] acc_10_V_fu_2886_p2;
wire   [17:0] acc_11_V_fu_2892_p2;
wire   [17:0] acc_12_V_fu_2898_p2;
wire   [17:0] acc_13_V_fu_2904_p2;
wire   [17:0] acc_14_V_fu_2910_p2;
wire   [17:0] acc_15_V_fu_2916_p2;
wire   [17:0] acc_16_V_fu_2922_p2;
wire   [17:0] acc_17_V_fu_2928_p2;
wire   [17:0] acc_18_V_fu_2934_p2;
wire   [17:0] acc_19_V_fu_2940_p2;
wire   [17:0] acc_20_V_fu_2946_p2;
wire   [17:0] acc_21_V_fu_2952_p2;
wire   [17:0] acc_22_V_fu_2958_p2;
wire   [17:0] acc_23_V_fu_2964_p2;
wire   [17:0] acc_24_V_fu_2970_p2;
wire   [17:0] acc_25_V_fu_2976_p2;
wire   [17:0] acc_26_V_fu_2982_p2;
wire   [17:0] acc_27_V_fu_2988_p2;
wire   [17:0] acc_28_V_fu_2994_p2;
wire   [17:0] acc_29_V_fu_3000_p2;
wire   [17:0] acc_30_V_fu_3006_p2;
wire   [17:0] acc_31_V_fu_3012_p2;
wire   [17:0] acc_32_V_fu_3018_p2;
wire   [17:0] acc_33_V_fu_3024_p2;
wire   [17:0] acc_34_V_fu_3030_p2;
wire   [17:0] acc_35_V_fu_3036_p2;
wire   [17:0] acc_36_V_fu_3042_p2;
wire   [17:0] acc_37_V_fu_3048_p2;
wire   [17:0] acc_38_V_fu_3054_p2;
wire   [17:0] acc_39_V_fu_3060_p2;
wire   [17:0] acc_40_V_fu_3066_p2;
wire   [17:0] acc_41_V_fu_3072_p2;
wire   [17:0] acc_42_V_fu_3078_p2;
wire   [17:0] acc_43_V_fu_3084_p2;
wire   [17:0] acc_44_V_fu_3090_p2;
wire   [17:0] acc_45_V_fu_3096_p2;
wire   [17:0] acc_46_V_fu_3102_p2;
wire   [17:0] acc_47_V_fu_3108_p2;
wire   [17:0] shl_ln731_2_fu_3128_p2;
reg   [17:0] shl_ln731_2_reg_4394;
wire    ap_CS_fsm_state7;
wire   [17:0] shl_ln731_3_fu_3134_p2;
reg   [17:0] shl_ln731_3_reg_4399;
wire   [17:0] shl_ln731_4_fu_3140_p2;
reg   [17:0] shl_ln731_4_reg_4404;
wire   [17:0] shl_ln731_5_fu_3146_p2;
reg   [17:0] shl_ln731_5_reg_4409;
wire   [17:0] shl_ln731_6_fu_3152_p2;
reg   [17:0] shl_ln731_6_reg_4414;
wire   [17:0] shl_ln731_7_fu_3158_p2;
reg   [17:0] shl_ln731_7_reg_4419;
wire   [17:0] shl_ln731_8_fu_3164_p2;
reg   [17:0] shl_ln731_8_reg_4424;
wire   [17:0] shl_ln731_9_fu_3170_p2;
reg   [17:0] shl_ln731_9_reg_4429;
wire   [17:0] shl_ln731_10_fu_3176_p2;
reg   [17:0] shl_ln731_10_reg_4434;
wire   [17:0] shl_ln731_11_fu_3182_p2;
reg   [17:0] shl_ln731_11_reg_4439;
wire   [17:0] shl_ln731_12_fu_3188_p2;
reg   [17:0] shl_ln731_12_reg_4444;
wire   [17:0] shl_ln731_13_fu_3194_p2;
reg   [17:0] shl_ln731_13_reg_4449;
wire   [17:0] shl_ln731_14_fu_3200_p2;
reg   [17:0] shl_ln731_14_reg_4454;
wire   [17:0] shl_ln731_15_fu_3206_p2;
reg   [17:0] shl_ln731_15_reg_4459;
wire   [17:0] shl_ln731_16_fu_3212_p2;
reg   [17:0] shl_ln731_16_reg_4464;
wire   [17:0] shl_ln731_17_fu_3218_p2;
reg   [17:0] shl_ln731_17_reg_4469;
wire   [17:0] shl_ln731_18_fu_3224_p2;
reg   [17:0] shl_ln731_18_reg_4474;
wire   [17:0] shl_ln731_19_fu_3230_p2;
reg   [17:0] shl_ln731_19_reg_4479;
wire   [17:0] shl_ln731_20_fu_3236_p2;
reg   [17:0] shl_ln731_20_reg_4484;
wire   [17:0] shl_ln731_21_fu_3242_p2;
reg   [17:0] shl_ln731_21_reg_4489;
wire   [17:0] shl_ln731_22_fu_3248_p2;
reg   [17:0] shl_ln731_22_reg_4494;
wire   [17:0] shl_ln731_23_fu_3254_p2;
reg   [17:0] shl_ln731_23_reg_4499;
wire   [17:0] shl_ln731_24_fu_3260_p2;
reg   [17:0] shl_ln731_24_reg_4504;
wire   [17:0] shl_ln731_25_fu_3266_p2;
reg   [17:0] shl_ln731_25_reg_4509;
wire   [17:0] shl_ln731_26_fu_3272_p2;
reg   [17:0] shl_ln731_26_reg_4514;
wire   [17:0] shl_ln731_27_fu_3278_p2;
reg   [17:0] shl_ln731_27_reg_4519;
wire   [17:0] shl_ln731_28_fu_3284_p2;
reg   [17:0] shl_ln731_28_reg_4524;
wire   [17:0] shl_ln731_29_fu_3290_p2;
reg   [17:0] shl_ln731_29_reg_4529;
wire   [17:0] shl_ln731_30_fu_3296_p2;
reg   [17:0] shl_ln731_30_reg_4534;
wire   [17:0] shl_ln731_31_fu_3302_p2;
reg   [17:0] shl_ln731_31_reg_4539;
wire   [17:0] shl_ln731_32_fu_3308_p2;
reg   [17:0] shl_ln731_32_reg_4544;
wire   [17:0] shl_ln731_33_fu_3314_p2;
reg   [17:0] shl_ln731_33_reg_4549;
wire   [17:0] shl_ln731_34_fu_3320_p2;
reg   [17:0] shl_ln731_34_reg_4554;
wire   [17:0] shl_ln731_35_fu_3326_p2;
reg   [17:0] shl_ln731_35_reg_4559;
wire   [17:0] shl_ln731_36_fu_3332_p2;
reg   [17:0] shl_ln731_36_reg_4564;
wire   [17:0] shl_ln731_37_fu_3338_p2;
reg   [17:0] shl_ln731_37_reg_4569;
wire   [17:0] shl_ln731_38_fu_3344_p2;
reg   [17:0] shl_ln731_38_reg_4574;
wire   [17:0] shl_ln731_39_fu_3350_p2;
reg   [17:0] shl_ln731_39_reg_4579;
wire   [17:0] shl_ln731_40_fu_3356_p2;
reg   [17:0] shl_ln731_40_reg_4584;
wire   [17:0] shl_ln731_41_fu_3362_p2;
reg   [17:0] shl_ln731_41_reg_4589;
wire   [17:0] shl_ln731_42_fu_3368_p2;
reg   [17:0] shl_ln731_42_reg_4594;
wire   [17:0] shl_ln731_43_fu_3374_p2;
reg   [17:0] shl_ln731_43_reg_4599;
wire   [17:0] shl_ln731_44_fu_3380_p2;
reg   [17:0] shl_ln731_44_reg_4604;
wire   [17:0] shl_ln731_45_fu_3386_p2;
reg   [17:0] shl_ln731_45_reg_4609;
wire   [17:0] shl_ln731_46_fu_3392_p2;
reg   [17:0] shl_ln731_46_reg_4614;
wire   [17:0] shl_ln731_47_fu_3398_p2;
reg   [17:0] shl_ln731_47_reg_4619;
wire   [5:0] i_ic_fu_3410_p2;
reg   [5:0] i_ic_reg_4627;
wire    ap_CS_fsm_state31;
wire   [0:0] icmp_ln338_fu_3404_p2;
wire   [0:0] icmp_ln346_fu_3421_p2;
reg   [0:0] icmp_ln346_reg_4637;
wire   [31:0] select_ln356_fu_3488_p3;
wire   [0:0] icmp_ln350_fu_3467_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg   [4:0] tmpdata_V_address0;
reg    tmpdata_V_ce0;
reg    tmpdata_V_we0;
wire   [17:0] tmpdata_V_q0;
reg   [5:0] layer_out_i_address0;
reg    layer_out_i_ce0;
reg    layer_out_i_we0;
reg   [17:0] layer_out_i_d0;
wire   [17:0] layer_out_i_q0;
reg   [5:0] layer_out_i_address1;
reg    layer_out_i_ce1;
reg    layer_out_i_we1;
reg   [17:0] layer_out_i_d1;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_start;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_idle;
wire   [4:0] grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_data_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_data_V_ce0;
wire   [8:0] grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_output_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_output_V_ce0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_output_V_we0;
wire   [17:0] grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_output_V_d0;
reg   [8:0] i_0_i_reg_951;
wire    ap_CS_fsm_state33;
reg   [5:0] i1_0_i_reg_962;
wire   [0:0] icmp_ln313_fu_1591_p2;
wire    ap_block_pp0_stage0;
reg   [5:0] i_ic_0_i_reg_1560;
wire    ap_CS_fsm_state30;
reg   [31:0] storemerge_i_reg_1571;
reg    grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_start_reg;
reg    ap_block_state3_ignore_call0;
wire   [63:0] zext_ln317_fu_1615_p1;
wire   [63:0] zext_ln332_fu_1710_p1;
wire   [63:0] zext_ln340_fu_3416_p1;
wire   [31:0] select_ln361_fu_3442_p3;
wire   [31:0] add_ln354_fu_3472_p2;
wire   [31:0] add_ln359_fu_3426_p2;
wire   [17:0] shl_ln731_fu_3114_p2;
wire   [17:0] shl_ln731_1_fu_3121_p2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire   [30:0] tmp_13_fu_1644_p4;
wire   [30:0] tmp_14_fu_1664_p4;
wire   [0:0] icmp_ln326_17_fu_1654_p2;
wire   [0:0] icmp_ln326_18_fu_1674_p2;
wire   [0:0] and_ln326_11_fu_1686_p2;
wire   [0:0] and_ln326_fu_1680_p2;
wire  signed [17:0] sext_ln1116_fu_1720_p0;
wire  signed [13:0] trunc_ln332_fu_1716_p1;
wire  signed [31:0] mul_ln1118_fu_3507_p2;
wire  signed [13:0] tmp_286_fu_1741_p4;
wire  signed [31:0] mul_ln1118_240_fu_3514_p2;
wire  signed [13:0] tmp_287_fu_1764_p4;
wire  signed [31:0] mul_ln1118_241_fu_3521_p2;
wire  signed [13:0] tmp_288_fu_1787_p4;
wire  signed [31:0] mul_ln1118_242_fu_3528_p2;
wire  signed [13:0] tmp_289_fu_1810_p4;
wire  signed [31:0] mul_ln1118_243_fu_3535_p2;
wire  signed [13:0] tmp_290_fu_1833_p4;
wire  signed [31:0] mul_ln1118_244_fu_3542_p2;
wire  signed [13:0] tmp_291_fu_1856_p4;
wire  signed [31:0] mul_ln1118_245_fu_3549_p2;
wire  signed [13:0] tmp_292_fu_1879_p4;
wire  signed [31:0] mul_ln1118_246_fu_3556_p2;
wire  signed [13:0] tmp_293_fu_1902_p4;
wire  signed [31:0] mul_ln1118_247_fu_3563_p2;
wire  signed [13:0] tmp_294_fu_1925_p4;
wire  signed [31:0] mul_ln1118_248_fu_3570_p2;
wire  signed [13:0] tmp_295_fu_1948_p4;
wire  signed [31:0] mul_ln1118_249_fu_3577_p2;
wire  signed [13:0] tmp_296_fu_1971_p4;
wire  signed [31:0] mul_ln1118_250_fu_3584_p2;
wire  signed [13:0] tmp_297_fu_1994_p4;
wire  signed [31:0] mul_ln1118_251_fu_3591_p2;
wire  signed [13:0] tmp_298_fu_2017_p4;
wire  signed [31:0] mul_ln1118_252_fu_3598_p2;
wire  signed [13:0] tmp_299_fu_2040_p4;
wire  signed [31:0] mul_ln1118_253_fu_3605_p2;
wire  signed [13:0] tmp_300_fu_2063_p4;
wire  signed [31:0] mul_ln1118_254_fu_3612_p2;
wire  signed [13:0] tmp_301_fu_2086_p4;
wire  signed [31:0] mul_ln1118_255_fu_3619_p2;
wire  signed [13:0] tmp_302_fu_2109_p4;
wire  signed [31:0] mul_ln1118_256_fu_3626_p2;
wire  signed [13:0] tmp_303_fu_2132_p4;
wire  signed [31:0] mul_ln1118_257_fu_3633_p2;
wire  signed [13:0] tmp_304_fu_2155_p4;
wire  signed [31:0] mul_ln1118_258_fu_3640_p2;
wire  signed [13:0] tmp_305_fu_2178_p4;
wire  signed [31:0] mul_ln1118_259_fu_3647_p2;
wire  signed [13:0] tmp_306_fu_2201_p4;
wire  signed [31:0] mul_ln1118_260_fu_3654_p2;
wire  signed [13:0] tmp_307_fu_2224_p4;
wire  signed [31:0] mul_ln1118_261_fu_3661_p2;
wire  signed [13:0] tmp_308_fu_2247_p4;
wire  signed [31:0] mul_ln1118_262_fu_3668_p2;
wire  signed [13:0] tmp_309_fu_2270_p4;
wire  signed [31:0] mul_ln1118_263_fu_3675_p2;
wire  signed [13:0] tmp_310_fu_2293_p4;
wire  signed [31:0] mul_ln1118_264_fu_3682_p2;
wire  signed [13:0] tmp_311_fu_2316_p4;
wire  signed [31:0] mul_ln1118_265_fu_3689_p2;
wire  signed [13:0] tmp_312_fu_2339_p4;
wire  signed [31:0] mul_ln1118_266_fu_3696_p2;
wire  signed [13:0] tmp_313_fu_2362_p4;
wire  signed [31:0] mul_ln1118_267_fu_3703_p2;
wire  signed [13:0] tmp_314_fu_2385_p4;
wire  signed [31:0] mul_ln1118_268_fu_3710_p2;
wire  signed [13:0] tmp_315_fu_2408_p4;
wire  signed [31:0] mul_ln1118_269_fu_3717_p2;
wire  signed [13:0] tmp_316_fu_2431_p4;
wire  signed [31:0] mul_ln1118_270_fu_3724_p2;
wire  signed [13:0] tmp_317_fu_2454_p4;
wire  signed [31:0] mul_ln1118_271_fu_3731_p2;
wire  signed [13:0] tmp_318_fu_2477_p4;
wire  signed [31:0] mul_ln1118_272_fu_3738_p2;
wire  signed [13:0] tmp_319_fu_2500_p4;
wire  signed [31:0] mul_ln1118_273_fu_3745_p2;
wire  signed [13:0] tmp_320_fu_2523_p4;
wire  signed [31:0] mul_ln1118_274_fu_3752_p2;
wire  signed [13:0] tmp_321_fu_2546_p4;
wire  signed [31:0] mul_ln1118_275_fu_3759_p2;
wire  signed [13:0] tmp_322_fu_2569_p4;
wire  signed [31:0] mul_ln1118_276_fu_3766_p2;
wire  signed [13:0] tmp_323_fu_2592_p4;
wire  signed [31:0] mul_ln1118_277_fu_3773_p2;
wire  signed [13:0] tmp_324_fu_2615_p4;
wire  signed [31:0] mul_ln1118_278_fu_3780_p2;
wire  signed [13:0] tmp_325_fu_2638_p4;
wire  signed [31:0] mul_ln1118_279_fu_3787_p2;
wire  signed [13:0] tmp_326_fu_2661_p4;
wire  signed [31:0] mul_ln1118_280_fu_3794_p2;
wire  signed [13:0] tmp_327_fu_2684_p4;
wire  signed [31:0] mul_ln1118_281_fu_3801_p2;
wire  signed [13:0] tmp_328_fu_2707_p4;
wire  signed [31:0] mul_ln1118_282_fu_3808_p2;
wire  signed [13:0] tmp_329_fu_2730_p4;
wire  signed [31:0] mul_ln1118_283_fu_3815_p2;
wire  signed [13:0] tmp_330_fu_2753_p4;
wire  signed [31:0] mul_ln1118_284_fu_3822_p2;
wire  signed [13:0] tmp_331_fu_2776_p4;
wire  signed [31:0] mul_ln1118_285_fu_3829_p2;
wire  signed [12:0] tmp_5_fu_2799_p4;
wire  signed [30:0] mul_ln1118_286_fu_3836_p2;
wire   [16:0] trunc_ln708_276_fu_2813_p4;
wire   [17:0] trunc_ln_fu_1732_p4;
wire   [17:0] trunc_ln708_s_fu_1755_p4;
wire   [17:0] trunc_ln708_231_fu_1778_p4;
wire   [17:0] trunc_ln708_232_fu_1801_p4;
wire   [17:0] trunc_ln708_233_fu_1824_p4;
wire   [17:0] trunc_ln708_234_fu_1847_p4;
wire   [17:0] trunc_ln708_235_fu_1870_p4;
wire   [17:0] trunc_ln708_236_fu_1893_p4;
wire   [17:0] trunc_ln708_237_fu_1916_p4;
wire   [17:0] trunc_ln708_238_fu_1939_p4;
wire   [17:0] trunc_ln708_239_fu_1962_p4;
wire   [17:0] trunc_ln708_240_fu_1985_p4;
wire   [17:0] trunc_ln708_241_fu_2008_p4;
wire   [17:0] trunc_ln708_242_fu_2031_p4;
wire   [17:0] trunc_ln708_243_fu_2054_p4;
wire   [17:0] trunc_ln708_244_fu_2077_p4;
wire   [17:0] trunc_ln708_245_fu_2100_p4;
wire   [17:0] trunc_ln708_246_fu_2123_p4;
wire   [17:0] trunc_ln708_247_fu_2146_p4;
wire   [17:0] trunc_ln708_248_fu_2169_p4;
wire   [17:0] trunc_ln708_249_fu_2192_p4;
wire   [17:0] trunc_ln708_250_fu_2215_p4;
wire   [17:0] trunc_ln708_251_fu_2238_p4;
wire   [17:0] trunc_ln708_252_fu_2261_p4;
wire   [17:0] trunc_ln708_253_fu_2284_p4;
wire   [17:0] trunc_ln708_254_fu_2307_p4;
wire   [17:0] trunc_ln708_255_fu_2330_p4;
wire   [17:0] trunc_ln708_256_fu_2353_p4;
wire   [17:0] trunc_ln708_257_fu_2376_p4;
wire   [17:0] trunc_ln708_258_fu_2399_p4;
wire   [17:0] trunc_ln708_259_fu_2422_p4;
wire   [17:0] trunc_ln708_260_fu_2445_p4;
wire   [17:0] trunc_ln708_261_fu_2468_p4;
wire   [17:0] trunc_ln708_262_fu_2491_p4;
wire   [17:0] trunc_ln708_263_fu_2514_p4;
wire   [17:0] trunc_ln708_264_fu_2537_p4;
wire   [17:0] trunc_ln708_265_fu_2560_p4;
wire   [17:0] trunc_ln708_266_fu_2583_p4;
wire   [17:0] trunc_ln708_267_fu_2606_p4;
wire   [17:0] trunc_ln708_268_fu_2629_p4;
wire   [17:0] trunc_ln708_269_fu_2652_p4;
wire   [17:0] trunc_ln708_270_fu_2675_p4;
wire   [17:0] trunc_ln708_271_fu_2698_p4;
wire   [17:0] trunc_ln708_272_fu_2721_p4;
wire   [17:0] trunc_ln708_273_fu_2744_p4;
wire   [17:0] trunc_ln708_274_fu_2767_p4;
wire   [17:0] trunc_ln708_275_fu_2790_p4;
wire  signed [17:0] sext_ln708_fu_2822_p1;
wire   [31:0] add_ln361_fu_3437_p2;
wire   [31:0] add_ln356_fu_3483_p2;
wire  signed [17:0] mul_ln1118_fu_3507_p1;
wire  signed [31:0] sext_ln1116_fu_1720_p1;
wire  signed [17:0] mul_ln1118_240_fu_3514_p1;
wire  signed [17:0] mul_ln1118_241_fu_3521_p1;
wire  signed [17:0] mul_ln1118_242_fu_3528_p1;
wire  signed [17:0] mul_ln1118_243_fu_3535_p1;
wire  signed [17:0] mul_ln1118_244_fu_3542_p1;
wire  signed [17:0] mul_ln1118_245_fu_3549_p1;
wire  signed [17:0] mul_ln1118_246_fu_3556_p1;
wire  signed [17:0] mul_ln1118_247_fu_3563_p1;
wire  signed [17:0] mul_ln1118_248_fu_3570_p1;
wire  signed [17:0] mul_ln1118_249_fu_3577_p1;
wire  signed [17:0] mul_ln1118_250_fu_3584_p1;
wire  signed [17:0] mul_ln1118_251_fu_3591_p1;
wire  signed [17:0] mul_ln1118_252_fu_3598_p1;
wire  signed [17:0] mul_ln1118_253_fu_3605_p1;
wire  signed [17:0] mul_ln1118_254_fu_3612_p1;
wire  signed [17:0] mul_ln1118_255_fu_3619_p1;
wire  signed [17:0] mul_ln1118_256_fu_3626_p1;
wire  signed [17:0] mul_ln1118_257_fu_3633_p1;
wire  signed [17:0] mul_ln1118_258_fu_3640_p1;
wire  signed [17:0] mul_ln1118_259_fu_3647_p1;
wire  signed [17:0] mul_ln1118_260_fu_3654_p1;
wire  signed [17:0] mul_ln1118_261_fu_3661_p1;
wire  signed [17:0] mul_ln1118_262_fu_3668_p1;
wire  signed [17:0] mul_ln1118_263_fu_3675_p1;
wire  signed [17:0] mul_ln1118_264_fu_3682_p1;
wire  signed [17:0] mul_ln1118_265_fu_3689_p1;
wire  signed [17:0] mul_ln1118_266_fu_3696_p1;
wire  signed [17:0] mul_ln1118_267_fu_3703_p1;
wire  signed [17:0] mul_ln1118_268_fu_3710_p1;
wire  signed [17:0] mul_ln1118_269_fu_3717_p1;
wire  signed [17:0] mul_ln1118_270_fu_3724_p1;
wire  signed [17:0] mul_ln1118_271_fu_3731_p1;
wire  signed [17:0] mul_ln1118_272_fu_3738_p1;
wire  signed [17:0] mul_ln1118_273_fu_3745_p1;
wire  signed [17:0] mul_ln1118_274_fu_3752_p1;
wire  signed [17:0] mul_ln1118_275_fu_3759_p1;
wire  signed [17:0] mul_ln1118_276_fu_3766_p1;
wire  signed [17:0] mul_ln1118_277_fu_3773_p1;
wire  signed [17:0] mul_ln1118_278_fu_3780_p1;
wire  signed [17:0] mul_ln1118_279_fu_3787_p1;
wire  signed [17:0] mul_ln1118_280_fu_3794_p1;
wire  signed [17:0] mul_ln1118_281_fu_3801_p1;
wire  signed [17:0] mul_ln1118_282_fu_3808_p1;
wire  signed [17:0] mul_ln1118_283_fu_3815_p1;
wire  signed [17:0] mul_ln1118_284_fu_3822_p1;
wire  signed [17:0] mul_ln1118_285_fu_3829_p1;
reg   [31:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_860;
reg    ap_condition_862;
reg    ap_condition_606;
reg    ap_condition_782;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 32'd1;
#0 sX_5 = 32'd0;
#0 sY_5 = 32'd0;
#0 pY_5 = 32'd0;
#0 pX_5 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_start_reg = 1'b0;
end

conv_2d_cl_ss_ap_fixed_ap_fixed_18_8_5_3_0_config7_s_layeibs #(
    .DataWidth( 18 ),
    .AddressRange( 288 ),
    .AddressWidth( 9 ))
layer_in_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_in_V_address0),
    .ce0(layer_in_V_ce0),
    .we0(layer_in_V_we0),
    .d0(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_output_V_d0),
    .q0(layer_in_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_w12_V #(
    .DataWidth( 671 ),
    .AddressRange( 288 ),
    .AddressWidth( 9 ))
w12_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w12_V_address0),
    .ce0(w12_V_ce0),
    .q0(w12_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_18_8_5_3_0_config7_s_tmpdjbC #(
    .DataWidth( 18 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
tmpdata_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpdata_V_address0),
    .ce0(tmpdata_V_ce0),
    .we0(tmpdata_V_we0),
    .d0(data_V_V_dout),
    .q0(tmpdata_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_laypcA #(
    .DataWidth( 18 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
layer_out_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_out_i_address0),
    .ce0(layer_out_i_ce0),
    .we0(layer_out_i_we0),
    .d0(layer_out_i_d0),
    .q0(layer_out_i_q0),
    .address1(layer_out_i_address1),
    .ce1(layer_out_i_ce1),
    .we1(layer_out_i_we1),
    .d1(layer_out_i_d1)
);

cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_start),
    .ap_done(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done),
    .ap_idle(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_idle),
    .ap_ready(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_ready),
    .data_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_data_V_address0),
    .data_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_data_V_ce0),
    .data_V_q0(tmpdata_V_q0),
    .output_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_output_V_address0),
    .output_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_output_V_ce0),
    .output_V_we0(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_output_V_we0),
    .output_V_d0(grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_output_V_d0),
    .output_V_q0(layer_in_V_q0)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U103(
    .din0(trunc_ln332_fu_1716_p1),
    .din1(mul_ln1118_fu_3507_p1),
    .dout(mul_ln1118_fu_3507_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U104(
    .din0(tmp_286_fu_1741_p4),
    .din1(mul_ln1118_240_fu_3514_p1),
    .dout(mul_ln1118_240_fu_3514_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U105(
    .din0(tmp_287_fu_1764_p4),
    .din1(mul_ln1118_241_fu_3521_p1),
    .dout(mul_ln1118_241_fu_3521_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U106(
    .din0(tmp_288_fu_1787_p4),
    .din1(mul_ln1118_242_fu_3528_p1),
    .dout(mul_ln1118_242_fu_3528_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U107(
    .din0(tmp_289_fu_1810_p4),
    .din1(mul_ln1118_243_fu_3535_p1),
    .dout(mul_ln1118_243_fu_3535_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U108(
    .din0(tmp_290_fu_1833_p4),
    .din1(mul_ln1118_244_fu_3542_p1),
    .dout(mul_ln1118_244_fu_3542_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U109(
    .din0(tmp_291_fu_1856_p4),
    .din1(mul_ln1118_245_fu_3549_p1),
    .dout(mul_ln1118_245_fu_3549_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U110(
    .din0(tmp_292_fu_1879_p4),
    .din1(mul_ln1118_246_fu_3556_p1),
    .dout(mul_ln1118_246_fu_3556_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U111(
    .din0(tmp_293_fu_1902_p4),
    .din1(mul_ln1118_247_fu_3563_p1),
    .dout(mul_ln1118_247_fu_3563_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U112(
    .din0(tmp_294_fu_1925_p4),
    .din1(mul_ln1118_248_fu_3570_p1),
    .dout(mul_ln1118_248_fu_3570_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U113(
    .din0(tmp_295_fu_1948_p4),
    .din1(mul_ln1118_249_fu_3577_p1),
    .dout(mul_ln1118_249_fu_3577_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U114(
    .din0(tmp_296_fu_1971_p4),
    .din1(mul_ln1118_250_fu_3584_p1),
    .dout(mul_ln1118_250_fu_3584_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U115(
    .din0(tmp_297_fu_1994_p4),
    .din1(mul_ln1118_251_fu_3591_p1),
    .dout(mul_ln1118_251_fu_3591_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U116(
    .din0(tmp_298_fu_2017_p4),
    .din1(mul_ln1118_252_fu_3598_p1),
    .dout(mul_ln1118_252_fu_3598_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U117(
    .din0(tmp_299_fu_2040_p4),
    .din1(mul_ln1118_253_fu_3605_p1),
    .dout(mul_ln1118_253_fu_3605_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U118(
    .din0(tmp_300_fu_2063_p4),
    .din1(mul_ln1118_254_fu_3612_p1),
    .dout(mul_ln1118_254_fu_3612_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U119(
    .din0(tmp_301_fu_2086_p4),
    .din1(mul_ln1118_255_fu_3619_p1),
    .dout(mul_ln1118_255_fu_3619_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U120(
    .din0(tmp_302_fu_2109_p4),
    .din1(mul_ln1118_256_fu_3626_p1),
    .dout(mul_ln1118_256_fu_3626_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U121(
    .din0(tmp_303_fu_2132_p4),
    .din1(mul_ln1118_257_fu_3633_p1),
    .dout(mul_ln1118_257_fu_3633_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U122(
    .din0(tmp_304_fu_2155_p4),
    .din1(mul_ln1118_258_fu_3640_p1),
    .dout(mul_ln1118_258_fu_3640_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U123(
    .din0(tmp_305_fu_2178_p4),
    .din1(mul_ln1118_259_fu_3647_p1),
    .dout(mul_ln1118_259_fu_3647_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U124(
    .din0(tmp_306_fu_2201_p4),
    .din1(mul_ln1118_260_fu_3654_p1),
    .dout(mul_ln1118_260_fu_3654_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U125(
    .din0(tmp_307_fu_2224_p4),
    .din1(mul_ln1118_261_fu_3661_p1),
    .dout(mul_ln1118_261_fu_3661_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U126(
    .din0(tmp_308_fu_2247_p4),
    .din1(mul_ln1118_262_fu_3668_p1),
    .dout(mul_ln1118_262_fu_3668_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U127(
    .din0(tmp_309_fu_2270_p4),
    .din1(mul_ln1118_263_fu_3675_p1),
    .dout(mul_ln1118_263_fu_3675_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U128(
    .din0(tmp_310_fu_2293_p4),
    .din1(mul_ln1118_264_fu_3682_p1),
    .dout(mul_ln1118_264_fu_3682_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U129(
    .din0(tmp_311_fu_2316_p4),
    .din1(mul_ln1118_265_fu_3689_p1),
    .dout(mul_ln1118_265_fu_3689_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U130(
    .din0(tmp_312_fu_2339_p4),
    .din1(mul_ln1118_266_fu_3696_p1),
    .dout(mul_ln1118_266_fu_3696_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U131(
    .din0(tmp_313_fu_2362_p4),
    .din1(mul_ln1118_267_fu_3703_p1),
    .dout(mul_ln1118_267_fu_3703_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U132(
    .din0(tmp_314_fu_2385_p4),
    .din1(mul_ln1118_268_fu_3710_p1),
    .dout(mul_ln1118_268_fu_3710_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U133(
    .din0(tmp_315_fu_2408_p4),
    .din1(mul_ln1118_269_fu_3717_p1),
    .dout(mul_ln1118_269_fu_3717_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U134(
    .din0(tmp_316_fu_2431_p4),
    .din1(mul_ln1118_270_fu_3724_p1),
    .dout(mul_ln1118_270_fu_3724_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U135(
    .din0(tmp_317_fu_2454_p4),
    .din1(mul_ln1118_271_fu_3731_p1),
    .dout(mul_ln1118_271_fu_3731_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U136(
    .din0(tmp_318_fu_2477_p4),
    .din1(mul_ln1118_272_fu_3738_p1),
    .dout(mul_ln1118_272_fu_3738_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U137(
    .din0(tmp_319_fu_2500_p4),
    .din1(mul_ln1118_273_fu_3745_p1),
    .dout(mul_ln1118_273_fu_3745_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U138(
    .din0(tmp_320_fu_2523_p4),
    .din1(mul_ln1118_274_fu_3752_p1),
    .dout(mul_ln1118_274_fu_3752_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U139(
    .din0(tmp_321_fu_2546_p4),
    .din1(mul_ln1118_275_fu_3759_p1),
    .dout(mul_ln1118_275_fu_3759_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U140(
    .din0(tmp_322_fu_2569_p4),
    .din1(mul_ln1118_276_fu_3766_p1),
    .dout(mul_ln1118_276_fu_3766_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U141(
    .din0(tmp_323_fu_2592_p4),
    .din1(mul_ln1118_277_fu_3773_p1),
    .dout(mul_ln1118_277_fu_3773_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U142(
    .din0(tmp_324_fu_2615_p4),
    .din1(mul_ln1118_278_fu_3780_p1),
    .dout(mul_ln1118_278_fu_3780_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U143(
    .din0(tmp_325_fu_2638_p4),
    .din1(mul_ln1118_279_fu_3787_p1),
    .dout(mul_ln1118_279_fu_3787_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U144(
    .din0(tmp_326_fu_2661_p4),
    .din1(mul_ln1118_280_fu_3794_p1),
    .dout(mul_ln1118_280_fu_3794_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U145(
    .din0(tmp_327_fu_2684_p4),
    .din1(mul_ln1118_281_fu_3801_p1),
    .dout(mul_ln1118_281_fu_3801_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U146(
    .din0(tmp_328_fu_2707_p4),
    .din1(mul_ln1118_282_fu_3808_p1),
    .dout(mul_ln1118_282_fu_3808_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U147(
    .din0(tmp_329_fu_2730_p4),
    .din1(mul_ln1118_283_fu_3815_p1),
    .dout(mul_ln1118_283_fu_3815_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U148(
    .din0(tmp_330_fu_2753_p4),
    .din1(mul_ln1118_284_fu_3822_p1),
    .dout(mul_ln1118_284_fu_3822_p2)
);

myproject_mul_mul_14s_18s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 32 ))
myproject_mul_mul_14s_18s_32_1_1_U149(
    .din0(tmp_331_fu_2776_p4),
    .din1(mul_ln1118_285_fu_3829_p1),
    .dout(mul_ln1118_285_fu_3829_p2)
);

myproject_mul_mul_13s_18s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 31 ))
myproject_mul_mul_13s_18s_31_1_1_U150(
    .din0(tmp_5_fu_2799_p4),
    .din1(layer_in_V_q0),
    .dout(mul_ln1118_286_fu_3836_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln313_fu_1591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_start_reg <= 1'b0;
    end else begin
        if ((~((data_V_V_empty_n == 1'b0) & (icmp_ln315_fu_1603_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln315_fu_1603_p2 == 1'd1))) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_start_reg <= 1'b1;
        end else if ((grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_ready == 1'b1)) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_0_0_reg_1537 <= acc_0_V_fu_2826_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_0_0_reg_1537 <= 18'd28;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_10_0_reg_1417 <= acc_10_V_fu_2886_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_10_0_reg_1417 <= 18'd27;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_11_0_reg_1405 <= acc_11_V_fu_2892_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_11_0_reg_1405 <= 18'd35;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_12_0_reg_1393 <= acc_12_V_fu_2898_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_12_0_reg_1393 <= 18'd262044;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_13_0_reg_1381 <= acc_13_V_fu_2904_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_13_0_reg_1381 <= 18'd26;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_14_0_reg_1369 <= acc_14_V_fu_2910_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_14_0_reg_1369 <= 18'd262121;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_15_0_reg_1357 <= acc_15_V_fu_2916_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_15_0_reg_1357 <= 18'd262129;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_16_0_reg_1345 <= acc_16_V_fu_2922_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_16_0_reg_1345 <= 18'd37;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_17_0_reg_1333 <= acc_17_V_fu_2928_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_17_0_reg_1333 <= 18'd8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_18_0_reg_1321 <= acc_18_V_fu_2934_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_18_0_reg_1321 <= 18'd48;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_19_0_reg_1309 <= acc_19_V_fu_2940_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_19_0_reg_1309 <= 18'd262103;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_1_0_reg_1525 <= acc_1_V_fu_2832_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_1_0_reg_1525 <= 18'd10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_20_0_reg_1297 <= acc_20_V_fu_2946_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_20_0_reg_1297 <= 18'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_21_0_reg_1285 <= acc_21_V_fu_2952_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_21_0_reg_1285 <= 18'd262117;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_22_0_reg_1273 <= acc_22_V_fu_2958_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_22_0_reg_1273 <= 18'd3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_23_0_reg_1261 <= acc_23_V_fu_2964_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_23_0_reg_1261 <= 18'd262012;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_24_0_reg_1249 <= acc_24_V_fu_2970_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_24_0_reg_1249 <= 18'd3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_25_0_reg_1237 <= acc_25_V_fu_2976_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_25_0_reg_1237 <= 18'd262138;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_26_0_reg_1225 <= acc_26_V_fu_2982_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_26_0_reg_1225 <= 18'd262025;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_27_0_reg_1213 <= acc_27_V_fu_2988_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_27_0_reg_1213 <= 18'd262141;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_28_0_reg_1201 <= acc_28_V_fu_2994_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_28_0_reg_1201 <= 18'd11;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_29_0_reg_1189 <= acc_29_V_fu_3000_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_29_0_reg_1189 <= 18'd6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_2_0_reg_1513 <= acc_2_V_fu_2838_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_2_0_reg_1513 <= 18'd9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_30_0_reg_1177 <= acc_30_V_fu_3006_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_30_0_reg_1177 <= 18'd26;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_31_0_reg_1165 <= acc_31_V_fu_3012_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_31_0_reg_1165 <= 18'd262001;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_32_0_reg_1153 <= acc_32_V_fu_3018_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_32_0_reg_1153 <= 18'd20;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_33_0_reg_1141 <= acc_33_V_fu_3024_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_33_0_reg_1141 <= 18'd4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_34_0_reg_1129 <= acc_34_V_fu_3030_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_34_0_reg_1129 <= 18'd19;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_35_0_reg_1117 <= acc_35_V_fu_3036_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_35_0_reg_1117 <= 18'd262132;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_36_0_reg_1105 <= acc_36_V_fu_3042_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_36_0_reg_1105 <= 18'd14;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_37_0_reg_1093 <= acc_37_V_fu_3048_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_37_0_reg_1093 <= 18'd15;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_38_0_reg_1081 <= acc_38_V_fu_3054_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_38_0_reg_1081 <= 18'd262124;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_39_0_reg_1069 <= acc_39_V_fu_3060_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_39_0_reg_1069 <= 18'd6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_3_0_reg_1501 <= acc_3_V_fu_2844_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_3_0_reg_1501 <= 18'd34;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_40_0_reg_1057 <= acc_40_V_fu_3066_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_40_0_reg_1057 <= 18'd262122;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_41_0_reg_1045 <= acc_41_V_fu_3072_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_41_0_reg_1045 <= 18'd262094;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_42_0_reg_1033 <= acc_42_V_fu_3078_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_42_0_reg_1033 <= 18'd262092;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_43_0_reg_1021 <= acc_43_V_fu_3084_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_43_0_reg_1021 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_44_0_reg_1009 <= acc_44_V_fu_3090_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_44_0_reg_1009 <= 18'd15;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_45_0_reg_997 <= acc_45_V_fu_3096_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_45_0_reg_997 <= 18'd27;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_46_0_reg_985 <= acc_46_V_fu_3102_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_46_0_reg_985 <= 18'd262009;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_47_0_reg_973 <= acc_47_V_fu_3108_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_47_0_reg_973 <= 18'd262135;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_4_0_reg_1489 <= acc_4_V_fu_2850_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_4_0_reg_1489 <= 18'd10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_5_0_reg_1477 <= acc_5_V_fu_2856_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_5_0_reg_1477 <= 18'd35;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_6_0_reg_1465 <= acc_6_V_fu_2862_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_6_0_reg_1465 <= 18'd262011;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_7_0_reg_1453 <= acc_7_V_fu_2868_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_7_0_reg_1453 <= 18'd53;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_8_0_reg_1441 <= acc_8_V_fu_2874_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_8_0_reg_1441 <= 18'd262097;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_4135 == 1'd0))) begin
        acc_V_9_0_reg_1429 <= acc_9_V_fu_2880_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_9_0_reg_1429 <= 18'd262099;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data_V_V_empty_n == 1'b0) & (icmp_ln315_fu_1603_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln315_fu_1603_p2 == 1'd0))) begin
        i1_0_i_reg_962 <= i1_fu_1609_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln313_fu_1591_p2 == 1'd0))) begin
        i1_0_i_reg_962 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        i_0_i_reg_951 <= i_reg_4086;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_951 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        i_ic_0_i_reg_1560 <= i_ic_reg_4627;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        i_ic_0_i_reg_1560 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_fu_1698_p2 == 1'd0))) begin
        in_index_reg_1549 <= ir_fu_1704_p2;
    end else if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        in_index_reg_1549 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        if ((1'b1 == ap_condition_862)) begin
            pX_5 <= 32'd0;
        end else if ((1'b1 == ap_condition_860)) begin
            pX_5 <= add_ln359_fu_3426_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        if ((1'b1 == ap_condition_782)) begin
            pY_5 <= 32'd0;
        end else if ((1'b1 == ap_condition_606)) begin
            pY_5 <= add_ln354_fu_3472_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        if ((1'b1 == ap_condition_862)) begin
            sX_5 <= 32'd0;
        end else if ((1'b1 == ap_condition_860)) begin
            sX_5 <= select_ln361_fu_3442_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        if ((1'b1 == ap_condition_782)) begin
            storemerge_i_reg_1571 <= 32'd0;
        end else if ((1'b1 == ap_condition_606)) begin
            storemerge_i_reg_1571 <= select_ln356_fu_3488_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        and_ln326_12_reg_4131 <= and_ln326_12_fu_1692_p2;
        icmp_ln326_16_reg_4114 <= icmp_ln326_16_fu_1634_p2;
        icmp_ln326_reg_4104 <= icmp_ln326_fu_1624_p2;
        pX_5_load_reg_4125 <= pX_5;
        pY_5_load_reg_4119 <= pY_5;
        sX_5_load_reg_4099 <= sX_5;
        sY_5_load_reg_4109 <= sY_5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln326_12_reg_4131) & (1'b1 == ap_CS_fsm_state31))) begin
        i_ic_reg_4627 <= i_ic_fu_3410_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_4086 <= i_fu_1597_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln324_reg_4135 <= icmp_ln324_fu_1698_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & ((icmp_ln338_fu_3404_p2 == 1'd1) | (1'd0 == and_ln326_12_reg_4131)))) begin
        icmp_ln346_reg_4637 <= icmp_ln346_fu_3421_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln346_reg_4637 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        sY_5 <= storemerge_i_reg_1571;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        shl_ln731_10_reg_4434[17 : 3] <= shl_ln731_10_fu_3176_p2[17 : 3];
        shl_ln731_11_reg_4439[17 : 3] <= shl_ln731_11_fu_3182_p2[17 : 3];
        shl_ln731_12_reg_4444[17 : 3] <= shl_ln731_12_fu_3188_p2[17 : 3];
        shl_ln731_13_reg_4449[17 : 3] <= shl_ln731_13_fu_3194_p2[17 : 3];
        shl_ln731_14_reg_4454[17 : 3] <= shl_ln731_14_fu_3200_p2[17 : 3];
        shl_ln731_15_reg_4459[17 : 3] <= shl_ln731_15_fu_3206_p2[17 : 3];
        shl_ln731_16_reg_4464[17 : 3] <= shl_ln731_16_fu_3212_p2[17 : 3];
        shl_ln731_17_reg_4469[17 : 3] <= shl_ln731_17_fu_3218_p2[17 : 3];
        shl_ln731_18_reg_4474[17 : 3] <= shl_ln731_18_fu_3224_p2[17 : 3];
        shl_ln731_19_reg_4479[17 : 3] <= shl_ln731_19_fu_3230_p2[17 : 3];
        shl_ln731_20_reg_4484[17 : 3] <= shl_ln731_20_fu_3236_p2[17 : 3];
        shl_ln731_21_reg_4489[17 : 3] <= shl_ln731_21_fu_3242_p2[17 : 3];
        shl_ln731_22_reg_4494[17 : 3] <= shl_ln731_22_fu_3248_p2[17 : 3];
        shl_ln731_23_reg_4499[17 : 3] <= shl_ln731_23_fu_3254_p2[17 : 3];
        shl_ln731_24_reg_4504[17 : 3] <= shl_ln731_24_fu_3260_p2[17 : 3];
        shl_ln731_25_reg_4509[17 : 3] <= shl_ln731_25_fu_3266_p2[17 : 3];
        shl_ln731_26_reg_4514[17 : 3] <= shl_ln731_26_fu_3272_p2[17 : 3];
        shl_ln731_27_reg_4519[17 : 3] <= shl_ln731_27_fu_3278_p2[17 : 3];
        shl_ln731_28_reg_4524[17 : 3] <= shl_ln731_28_fu_3284_p2[17 : 3];
        shl_ln731_29_reg_4529[17 : 3] <= shl_ln731_29_fu_3290_p2[17 : 3];
        shl_ln731_2_reg_4394[17 : 3] <= shl_ln731_2_fu_3128_p2[17 : 3];
        shl_ln731_30_reg_4534[17 : 3] <= shl_ln731_30_fu_3296_p2[17 : 3];
        shl_ln731_31_reg_4539[17 : 3] <= shl_ln731_31_fu_3302_p2[17 : 3];
        shl_ln731_32_reg_4544[17 : 3] <= shl_ln731_32_fu_3308_p2[17 : 3];
        shl_ln731_33_reg_4549[17 : 3] <= shl_ln731_33_fu_3314_p2[17 : 3];
        shl_ln731_34_reg_4554[17 : 3] <= shl_ln731_34_fu_3320_p2[17 : 3];
        shl_ln731_35_reg_4559[17 : 3] <= shl_ln731_35_fu_3326_p2[17 : 3];
        shl_ln731_36_reg_4564[17 : 3] <= shl_ln731_36_fu_3332_p2[17 : 3];
        shl_ln731_37_reg_4569[17 : 3] <= shl_ln731_37_fu_3338_p2[17 : 3];
        shl_ln731_38_reg_4574[17 : 3] <= shl_ln731_38_fu_3344_p2[17 : 3];
        shl_ln731_39_reg_4579[17 : 3] <= shl_ln731_39_fu_3350_p2[17 : 3];
        shl_ln731_3_reg_4399[17 : 3] <= shl_ln731_3_fu_3134_p2[17 : 3];
        shl_ln731_40_reg_4584[17 : 3] <= shl_ln731_40_fu_3356_p2[17 : 3];
        shl_ln731_41_reg_4589[17 : 3] <= shl_ln731_41_fu_3362_p2[17 : 3];
        shl_ln731_42_reg_4594[17 : 3] <= shl_ln731_42_fu_3368_p2[17 : 3];
        shl_ln731_43_reg_4599[17 : 3] <= shl_ln731_43_fu_3374_p2[17 : 3];
        shl_ln731_44_reg_4604[17 : 3] <= shl_ln731_44_fu_3380_p2[17 : 3];
        shl_ln731_45_reg_4609[17 : 3] <= shl_ln731_45_fu_3386_p2[17 : 3];
        shl_ln731_46_reg_4614[17 : 3] <= shl_ln731_46_fu_3392_p2[17 : 3];
        shl_ln731_47_reg_4619[17 : 3] <= shl_ln731_47_fu_3398_p2[17 : 3];
        shl_ln731_4_reg_4404[17 : 3] <= shl_ln731_4_fu_3140_p2[17 : 3];
        shl_ln731_5_reg_4409[17 : 3] <= shl_ln731_5_fu_3146_p2[17 : 3];
        shl_ln731_6_reg_4414[17 : 3] <= shl_ln731_6_fu_3152_p2[17 : 3];
        shl_ln731_7_reg_4419[17 : 3] <= shl_ln731_7_fu_3158_p2[17 : 3];
        shl_ln731_8_reg_4424[17 : 3] <= shl_ln731_8_fu_3164_p2[17 : 3];
        shl_ln731_9_reg_4429[17 : 3] <= shl_ln731_9_fu_3170_p2[17 : 3];
    end
end

always @ (*) begin
    if ((icmp_ln324_fu_1698_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_1591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln315_fu_1603_p2 == 1'd0))) begin
        data_V_V_blk_n = data_V_V_empty_n;
    end else begin
        data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((data_V_V_empty_n == 1'b0) & (icmp_ln315_fu_1603_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln315_fu_1603_p2 == 1'd0))) begin
        data_V_V_read = 1'b1;
    end else begin
        data_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_1591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_address0 = zext_ln332_fu_1710_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_output_V_address0;
    end else begin
        layer_in_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_output_V_ce0;
    end else begin
        layer_in_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_we0 = grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_output_V_we0;
    end else begin
        layer_in_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        layer_out_i_address0 = zext_ln340_fu_3416_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        layer_out_i_address0 = 64'd46;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        layer_out_i_address0 = 64'd44;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        layer_out_i_address0 = 64'd42;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        layer_out_i_address0 = 64'd40;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        layer_out_i_address0 = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        layer_out_i_address0 = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_out_i_address0 = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_out_i_address0 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address0 = 64'd0;
    end else begin
        layer_out_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        layer_out_i_address1 = 64'd47;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        layer_out_i_address1 = 64'd45;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        layer_out_i_address1 = 64'd43;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        layer_out_i_address1 = 64'd41;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        layer_out_i_address1 = 64'd39;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        layer_out_i_address1 = 64'd37;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_out_i_address1 = 64'd35;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_out_i_address1 = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address1 = 64'd1;
    end else begin
        layer_out_i_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state29))) begin
        layer_out_i_ce0 = 1'b1;
    end else begin
        layer_out_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state29))) begin
        layer_out_i_ce1 = 1'b1;
    end else begin
        layer_out_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        layer_out_i_d0 = shl_ln731_46_reg_4614;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        layer_out_i_d0 = shl_ln731_44_reg_4604;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        layer_out_i_d0 = shl_ln731_42_reg_4594;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        layer_out_i_d0 = shl_ln731_40_reg_4584;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        layer_out_i_d0 = shl_ln731_38_reg_4574;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        layer_out_i_d0 = shl_ln731_36_reg_4564;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_out_i_d0 = shl_ln731_34_reg_4554;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_out_i_d0 = shl_ln731_32_reg_4544;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_d0 = shl_ln731_30_reg_4534;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_d0 = shl_ln731_28_reg_4524;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_d0 = shl_ln731_26_reg_4514;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_d0 = shl_ln731_24_reg_4504;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_d0 = shl_ln731_22_reg_4494;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_d0 = shl_ln731_20_reg_4484;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_d0 = shl_ln731_18_reg_4474;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_d0 = shl_ln731_16_reg_4464;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d0 = shl_ln731_14_reg_4454;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d0 = shl_ln731_12_reg_4444;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d0 = shl_ln731_10_reg_4434;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d0 = shl_ln731_8_reg_4424;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d0 = shl_ln731_6_reg_4414;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d0 = shl_ln731_4_reg_4404;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d0 = shl_ln731_2_reg_4394;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d0 = shl_ln731_fu_3114_p2;
    end else begin
        layer_out_i_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        layer_out_i_d1 = shl_ln731_47_reg_4619;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        layer_out_i_d1 = shl_ln731_45_reg_4609;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        layer_out_i_d1 = shl_ln731_43_reg_4599;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        layer_out_i_d1 = shl_ln731_41_reg_4589;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        layer_out_i_d1 = shl_ln731_39_reg_4579;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        layer_out_i_d1 = shl_ln731_37_reg_4569;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_out_i_d1 = shl_ln731_35_reg_4559;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_out_i_d1 = shl_ln731_33_reg_4549;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_d1 = shl_ln731_31_reg_4539;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_d1 = shl_ln731_29_reg_4529;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_d1 = shl_ln731_27_reg_4519;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_d1 = shl_ln731_25_reg_4509;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_d1 = shl_ln731_23_reg_4499;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_d1 = shl_ln731_21_reg_4489;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_d1 = shl_ln731_19_reg_4479;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_d1 = shl_ln731_17_reg_4469;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d1 = shl_ln731_15_reg_4459;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d1 = shl_ln731_13_reg_4449;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d1 = shl_ln731_11_reg_4439;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d1 = shl_ln731_9_reg_4429;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d1 = shl_ln731_7_reg_4419;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d1 = shl_ln731_5_reg_4409;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d1 = shl_ln731_3_reg_4399;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d1 = shl_ln731_1_fu_3121_p2;
    end else begin
        layer_out_i_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state29))) begin
        layer_out_i_we0 = 1'b1;
    end else begin
        layer_out_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state29))) begin
        layer_out_i_we1 = 1'b1;
    end else begin
        layer_out_i_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        res_V_V_blk_n = res_V_V_full_n;
    end else begin
        res_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        res_V_V_write = 1'b1;
    end else begin
        res_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln315_fu_1603_p2 == 1'd0))) begin
        tmpdata_V_address0 = zext_ln317_fu_1615_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_data_V_address0;
    end else begin
        tmpdata_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((data_V_V_empty_n == 1'b0) & (icmp_ln315_fu_1603_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln315_fu_1603_p2 == 1'd0))) begin
        tmpdata_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_data_V_ce0;
    end else begin
        tmpdata_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((data_V_V_empty_n == 1'b0) & (icmp_ln315_fu_1603_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln315_fu_1603_p2 == 1'd0))) begin
        tmpdata_V_we0 = 1'b1;
    end else begin
        tmpdata_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w12_V_ce0 = 1'b1;
    end else begin
        w12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln313_fu_1591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((data_V_V_empty_n == 1'b0) & (icmp_ln315_fu_1603_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln315_fu_1603_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((data_V_V_empty_n == 1'b0) & (icmp_ln315_fu_1603_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln315_fu_1603_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'd1 == and_ln326_12_fu_1692_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4) & (1'd0 == and_ln326_12_fu_1692_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_fu_1698_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_fu_1698_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & ((icmp_ln338_fu_3404_p2 == 1'd1) | (1'd0 == and_ln326_12_reg_4131)))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_fu_2826_p2 = (acc_V_0_0_reg_1537 + trunc_ln_fu_1732_p4);

assign acc_10_V_fu_2886_p2 = (acc_V_10_0_reg_1417 + trunc_ln708_239_fu_1962_p4);

assign acc_11_V_fu_2892_p2 = (acc_V_11_0_reg_1405 + trunc_ln708_240_fu_1985_p4);

assign acc_12_V_fu_2898_p2 = (acc_V_12_0_reg_1393 + trunc_ln708_241_fu_2008_p4);

assign acc_13_V_fu_2904_p2 = (acc_V_13_0_reg_1381 + trunc_ln708_242_fu_2031_p4);

assign acc_14_V_fu_2910_p2 = (acc_V_14_0_reg_1369 + trunc_ln708_243_fu_2054_p4);

assign acc_15_V_fu_2916_p2 = (acc_V_15_0_reg_1357 + trunc_ln708_244_fu_2077_p4);

assign acc_16_V_fu_2922_p2 = (acc_V_16_0_reg_1345 + trunc_ln708_245_fu_2100_p4);

assign acc_17_V_fu_2928_p2 = (acc_V_17_0_reg_1333 + trunc_ln708_246_fu_2123_p4);

assign acc_18_V_fu_2934_p2 = (acc_V_18_0_reg_1321 + trunc_ln708_247_fu_2146_p4);

assign acc_19_V_fu_2940_p2 = (acc_V_19_0_reg_1309 + trunc_ln708_248_fu_2169_p4);

assign acc_1_V_fu_2832_p2 = (acc_V_1_0_reg_1525 + trunc_ln708_s_fu_1755_p4);

assign acc_20_V_fu_2946_p2 = (acc_V_20_0_reg_1297 + trunc_ln708_249_fu_2192_p4);

assign acc_21_V_fu_2952_p2 = (acc_V_21_0_reg_1285 + trunc_ln708_250_fu_2215_p4);

assign acc_22_V_fu_2958_p2 = (acc_V_22_0_reg_1273 + trunc_ln708_251_fu_2238_p4);

assign acc_23_V_fu_2964_p2 = (acc_V_23_0_reg_1261 + trunc_ln708_252_fu_2261_p4);

assign acc_24_V_fu_2970_p2 = (acc_V_24_0_reg_1249 + trunc_ln708_253_fu_2284_p4);

assign acc_25_V_fu_2976_p2 = (acc_V_25_0_reg_1237 + trunc_ln708_254_fu_2307_p4);

assign acc_26_V_fu_2982_p2 = (acc_V_26_0_reg_1225 + trunc_ln708_255_fu_2330_p4);

assign acc_27_V_fu_2988_p2 = (acc_V_27_0_reg_1213 + trunc_ln708_256_fu_2353_p4);

assign acc_28_V_fu_2994_p2 = (acc_V_28_0_reg_1201 + trunc_ln708_257_fu_2376_p4);

assign acc_29_V_fu_3000_p2 = (acc_V_29_0_reg_1189 + trunc_ln708_258_fu_2399_p4);

assign acc_2_V_fu_2838_p2 = (acc_V_2_0_reg_1513 + trunc_ln708_231_fu_1778_p4);

assign acc_30_V_fu_3006_p2 = (acc_V_30_0_reg_1177 + trunc_ln708_259_fu_2422_p4);

assign acc_31_V_fu_3012_p2 = (acc_V_31_0_reg_1165 + trunc_ln708_260_fu_2445_p4);

assign acc_32_V_fu_3018_p2 = (acc_V_32_0_reg_1153 + trunc_ln708_261_fu_2468_p4);

assign acc_33_V_fu_3024_p2 = (acc_V_33_0_reg_1141 + trunc_ln708_262_fu_2491_p4);

assign acc_34_V_fu_3030_p2 = (acc_V_34_0_reg_1129 + trunc_ln708_263_fu_2514_p4);

assign acc_35_V_fu_3036_p2 = (acc_V_35_0_reg_1117 + trunc_ln708_264_fu_2537_p4);

assign acc_36_V_fu_3042_p2 = (acc_V_36_0_reg_1105 + trunc_ln708_265_fu_2560_p4);

assign acc_37_V_fu_3048_p2 = (acc_V_37_0_reg_1093 + trunc_ln708_266_fu_2583_p4);

assign acc_38_V_fu_3054_p2 = (acc_V_38_0_reg_1081 + trunc_ln708_267_fu_2606_p4);

assign acc_39_V_fu_3060_p2 = (acc_V_39_0_reg_1069 + trunc_ln708_268_fu_2629_p4);

assign acc_3_V_fu_2844_p2 = (acc_V_3_0_reg_1501 + trunc_ln708_232_fu_1801_p4);

assign acc_40_V_fu_3066_p2 = (acc_V_40_0_reg_1057 + trunc_ln708_269_fu_2652_p4);

assign acc_41_V_fu_3072_p2 = (acc_V_41_0_reg_1045 + trunc_ln708_270_fu_2675_p4);

assign acc_42_V_fu_3078_p2 = (acc_V_42_0_reg_1033 + trunc_ln708_271_fu_2698_p4);

assign acc_43_V_fu_3084_p2 = (acc_V_43_0_reg_1021 + trunc_ln708_272_fu_2721_p4);

assign acc_44_V_fu_3090_p2 = (acc_V_44_0_reg_1009 + trunc_ln708_273_fu_2744_p4);

assign acc_45_V_fu_3096_p2 = (acc_V_45_0_reg_997 + trunc_ln708_274_fu_2767_p4);

assign acc_46_V_fu_3102_p2 = (acc_V_46_0_reg_985 + trunc_ln708_275_fu_2790_p4);

assign acc_47_V_fu_3108_p2 = ($signed(acc_V_47_0_reg_973) + $signed(sext_ln708_fu_2822_p1));

assign acc_4_V_fu_2850_p2 = (acc_V_4_0_reg_1489 + trunc_ln708_233_fu_1824_p4);

assign acc_5_V_fu_2856_p2 = (acc_V_5_0_reg_1477 + trunc_ln708_234_fu_1847_p4);

assign acc_6_V_fu_2862_p2 = (acc_V_6_0_reg_1465 + trunc_ln708_235_fu_1870_p4);

assign acc_7_V_fu_2868_p2 = (acc_V_7_0_reg_1453 + trunc_ln708_236_fu_1893_p4);

assign acc_8_V_fu_2874_p2 = (acc_V_8_0_reg_1441 + trunc_ln708_237_fu_1916_p4);

assign acc_9_V_fu_2880_p2 = (acc_V_9_0_reg_1429 + trunc_ln708_238_fu_1939_p4);

assign add_ln354_fu_3472_p2 = (pY_5_load_reg_4119 + 32'd1);

assign add_ln356_fu_3483_p2 = (sY_5_load_reg_4109 + 32'd1);

assign add_ln359_fu_3426_p2 = (pX_5_load_reg_4125 + 32'd1);

assign add_ln361_fu_3437_p2 = (sX_5_load_reg_4099 + 32'd1);

assign and_ln326_11_fu_1686_p2 = (icmp_ln326_18_fu_1674_p2 & icmp_ln326_17_fu_1654_p2);

assign and_ln326_12_fu_1692_p2 = (and_ln326_fu_1680_p2 & and_ln326_11_fu_1686_p2);

assign and_ln326_fu_1680_p2 = (icmp_ln326_fu_1624_p2 & icmp_ln326_16_fu_1634_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((data_V_V_empty_n == 1'b0) & (icmp_ln315_fu_1603_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state3_ignore_call0 = ((data_V_V_empty_n == 1'b0) & (icmp_ln315_fu_1603_p2 == 1'd0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_606 = (((icmp_ln346_fu_3421_p2 == 1'd1) & (icmp_ln350_fu_3467_p2 == 1'd0) & (1'd0 == and_ln326_12_reg_4131)) | ((icmp_ln346_fu_3421_p2 == 1'd1) & (icmp_ln338_fu_3404_p2 == 1'd1) & (icmp_ln350_fu_3467_p2 == 1'd0)));
end

always @ (*) begin
    ap_condition_782 = (((icmp_ln350_fu_3467_p2 == 1'd1) & (icmp_ln346_fu_3421_p2 == 1'd1) & (1'd0 == and_ln326_12_reg_4131)) | ((icmp_ln350_fu_3467_p2 == 1'd1) & (icmp_ln346_fu_3421_p2 == 1'd1) & (icmp_ln338_fu_3404_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_860 = (((icmp_ln346_fu_3421_p2 == 1'd0) & (1'd0 == and_ln326_12_reg_4131)) | ((icmp_ln338_fu_3404_p2 == 1'd1) & (icmp_ln346_fu_3421_p2 == 1'd0)));
end

always @ (*) begin
    ap_condition_862 = (((icmp_ln346_fu_3421_p2 == 1'd1) & (1'd0 == and_ln326_12_reg_4131)) | ((icmp_ln346_fu_3421_p2 == 1'd1) & (icmp_ln338_fu_3404_p2 == 1'd1)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_start = grp_cnnshift_arr_ap_fixed_ap_fixed_18_8_5_3_0_config12_s_fu_1582_ap_start_reg;

assign i1_fu_1609_p2 = (i1_0_i_reg_962 + 6'd1);

assign i_fu_1597_p2 = (i_0_i_reg_951 + 9'd1);

assign i_ic_fu_3410_p2 = (i_ic_0_i_reg_1560 + 6'd1);

assign icmp_ln313_fu_1591_p2 = ((i_0_i_reg_951 == 9'd324) ? 1'b1 : 1'b0);

assign icmp_ln315_fu_1603_p2 = ((i1_0_i_reg_962 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln324_fu_1698_p2 = ((in_index_reg_1549 == 9'd288) ? 1'b1 : 1'b0);

assign icmp_ln326_16_fu_1634_p2 = ((sY_5 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln326_17_fu_1654_p2 = (($signed(tmp_13_fu_1644_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln326_18_fu_1674_p2 = (($signed(tmp_14_fu_1664_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln326_fu_1624_p2 = ((sX_5 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln338_fu_3404_p2 = ((i_ic_0_i_reg_1560 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln346_fu_3421_p2 = ((pX_5_load_reg_4125 == 32'd17) ? 1'b1 : 1'b0);

assign icmp_ln350_fu_3467_p2 = ((pY_5_load_reg_4119 == 32'd17) ? 1'b1 : 1'b0);

assign ir_fu_1704_p2 = (in_index_reg_1549 + 9'd1);

assign mul_ln1118_240_fu_3514_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_241_fu_3521_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_242_fu_3528_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_243_fu_3535_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_244_fu_3542_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_245_fu_3549_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_246_fu_3556_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_247_fu_3563_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_248_fu_3570_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_249_fu_3577_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_250_fu_3584_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_251_fu_3591_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_252_fu_3598_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_253_fu_3605_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_254_fu_3612_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_255_fu_3619_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_256_fu_3626_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_257_fu_3633_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_258_fu_3640_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_259_fu_3647_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_260_fu_3654_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_261_fu_3661_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_262_fu_3668_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_263_fu_3675_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_264_fu_3682_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_265_fu_3689_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_266_fu_3696_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_267_fu_3703_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_268_fu_3710_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_269_fu_3717_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_270_fu_3724_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_271_fu_3731_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_272_fu_3738_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_273_fu_3745_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_274_fu_3752_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_275_fu_3759_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_276_fu_3766_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_277_fu_3773_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_278_fu_3780_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_279_fu_3787_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_280_fu_3794_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_281_fu_3801_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_282_fu_3808_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_283_fu_3815_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_284_fu_3822_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_285_fu_3829_p1 = sext_ln1116_fu_1720_p1;

assign mul_ln1118_fu_3507_p1 = sext_ln1116_fu_1720_p1;

assign res_V_V_din = layer_out_i_q0;

assign select_ln356_fu_3488_p3 = ((icmp_ln326_16_reg_4114[0:0] === 1'b1) ? 32'd2 : add_ln356_fu_3483_p2);

assign select_ln361_fu_3442_p3 = ((icmp_ln326_reg_4104[0:0] === 1'b1) ? 32'd2 : add_ln361_fu_3437_p2);

assign sext_ln1116_fu_1720_p0 = layer_in_V_q0;

assign sext_ln1116_fu_1720_p1 = sext_ln1116_fu_1720_p0;

assign sext_ln708_fu_2822_p1 = $signed(trunc_ln708_276_fu_2813_p4);

assign shl_ln731_10_fu_3176_p2 = acc_V_10_0_reg_1417 << 18'd3;

assign shl_ln731_11_fu_3182_p2 = acc_V_11_0_reg_1405 << 18'd3;

assign shl_ln731_12_fu_3188_p2 = acc_V_12_0_reg_1393 << 18'd3;

assign shl_ln731_13_fu_3194_p2 = acc_V_13_0_reg_1381 << 18'd3;

assign shl_ln731_14_fu_3200_p2 = acc_V_14_0_reg_1369 << 18'd3;

assign shl_ln731_15_fu_3206_p2 = acc_V_15_0_reg_1357 << 18'd3;

assign shl_ln731_16_fu_3212_p2 = acc_V_16_0_reg_1345 << 18'd3;

assign shl_ln731_17_fu_3218_p2 = acc_V_17_0_reg_1333 << 18'd3;

assign shl_ln731_18_fu_3224_p2 = acc_V_18_0_reg_1321 << 18'd3;

assign shl_ln731_19_fu_3230_p2 = acc_V_19_0_reg_1309 << 18'd3;

assign shl_ln731_1_fu_3121_p2 = acc_V_1_0_reg_1525 << 18'd3;

assign shl_ln731_20_fu_3236_p2 = acc_V_20_0_reg_1297 << 18'd3;

assign shl_ln731_21_fu_3242_p2 = acc_V_21_0_reg_1285 << 18'd3;

assign shl_ln731_22_fu_3248_p2 = acc_V_22_0_reg_1273 << 18'd3;

assign shl_ln731_23_fu_3254_p2 = acc_V_23_0_reg_1261 << 18'd3;

assign shl_ln731_24_fu_3260_p2 = acc_V_24_0_reg_1249 << 18'd3;

assign shl_ln731_25_fu_3266_p2 = acc_V_25_0_reg_1237 << 18'd3;

assign shl_ln731_26_fu_3272_p2 = acc_V_26_0_reg_1225 << 18'd3;

assign shl_ln731_27_fu_3278_p2 = acc_V_27_0_reg_1213 << 18'd3;

assign shl_ln731_28_fu_3284_p2 = acc_V_28_0_reg_1201 << 18'd3;

assign shl_ln731_29_fu_3290_p2 = acc_V_29_0_reg_1189 << 18'd3;

assign shl_ln731_2_fu_3128_p2 = acc_V_2_0_reg_1513 << 18'd3;

assign shl_ln731_30_fu_3296_p2 = acc_V_30_0_reg_1177 << 18'd3;

assign shl_ln731_31_fu_3302_p2 = acc_V_31_0_reg_1165 << 18'd3;

assign shl_ln731_32_fu_3308_p2 = acc_V_32_0_reg_1153 << 18'd3;

assign shl_ln731_33_fu_3314_p2 = acc_V_33_0_reg_1141 << 18'd3;

assign shl_ln731_34_fu_3320_p2 = acc_V_34_0_reg_1129 << 18'd3;

assign shl_ln731_35_fu_3326_p2 = acc_V_35_0_reg_1117 << 18'd3;

assign shl_ln731_36_fu_3332_p2 = acc_V_36_0_reg_1105 << 18'd3;

assign shl_ln731_37_fu_3338_p2 = acc_V_37_0_reg_1093 << 18'd3;

assign shl_ln731_38_fu_3344_p2 = acc_V_38_0_reg_1081 << 18'd3;

assign shl_ln731_39_fu_3350_p2 = acc_V_39_0_reg_1069 << 18'd3;

assign shl_ln731_3_fu_3134_p2 = acc_V_3_0_reg_1501 << 18'd3;

assign shl_ln731_40_fu_3356_p2 = acc_V_40_0_reg_1057 << 18'd3;

assign shl_ln731_41_fu_3362_p2 = acc_V_41_0_reg_1045 << 18'd3;

assign shl_ln731_42_fu_3368_p2 = acc_V_42_0_reg_1033 << 18'd3;

assign shl_ln731_43_fu_3374_p2 = acc_V_43_0_reg_1021 << 18'd3;

assign shl_ln731_44_fu_3380_p2 = acc_V_44_0_reg_1009 << 18'd3;

assign shl_ln731_45_fu_3386_p2 = acc_V_45_0_reg_997 << 18'd3;

assign shl_ln731_46_fu_3392_p2 = acc_V_46_0_reg_985 << 18'd3;

assign shl_ln731_47_fu_3398_p2 = acc_V_47_0_reg_973 << 18'd3;

assign shl_ln731_4_fu_3140_p2 = acc_V_4_0_reg_1489 << 18'd3;

assign shl_ln731_5_fu_3146_p2 = acc_V_5_0_reg_1477 << 18'd3;

assign shl_ln731_6_fu_3152_p2 = acc_V_6_0_reg_1465 << 18'd3;

assign shl_ln731_7_fu_3158_p2 = acc_V_7_0_reg_1453 << 18'd3;

assign shl_ln731_8_fu_3164_p2 = acc_V_8_0_reg_1441 << 18'd3;

assign shl_ln731_9_fu_3170_p2 = acc_V_9_0_reg_1429 << 18'd3;

assign shl_ln731_fu_3114_p2 = acc_V_0_0_reg_1537 << 18'd3;

assign start_out = real_start;

assign tmp_13_fu_1644_p4 = {{pY_5[31:1]}};

assign tmp_14_fu_1664_p4 = {{pX_5[31:1]}};

assign tmp_286_fu_1741_p4 = {{w12_V_q0[27:14]}};

assign tmp_287_fu_1764_p4 = {{w12_V_q0[41:28]}};

assign tmp_288_fu_1787_p4 = {{w12_V_q0[55:42]}};

assign tmp_289_fu_1810_p4 = {{w12_V_q0[69:56]}};

assign tmp_290_fu_1833_p4 = {{w12_V_q0[83:70]}};

assign tmp_291_fu_1856_p4 = {{w12_V_q0[97:84]}};

assign tmp_292_fu_1879_p4 = {{w12_V_q0[111:98]}};

assign tmp_293_fu_1902_p4 = {{w12_V_q0[125:112]}};

assign tmp_294_fu_1925_p4 = {{w12_V_q0[139:126]}};

assign tmp_295_fu_1948_p4 = {{w12_V_q0[153:140]}};

assign tmp_296_fu_1971_p4 = {{w12_V_q0[167:154]}};

assign tmp_297_fu_1994_p4 = {{w12_V_q0[181:168]}};

assign tmp_298_fu_2017_p4 = {{w12_V_q0[195:182]}};

assign tmp_299_fu_2040_p4 = {{w12_V_q0[209:196]}};

assign tmp_300_fu_2063_p4 = {{w12_V_q0[223:210]}};

assign tmp_301_fu_2086_p4 = {{w12_V_q0[237:224]}};

assign tmp_302_fu_2109_p4 = {{w12_V_q0[251:238]}};

assign tmp_303_fu_2132_p4 = {{w12_V_q0[265:252]}};

assign tmp_304_fu_2155_p4 = {{w12_V_q0[279:266]}};

assign tmp_305_fu_2178_p4 = {{w12_V_q0[293:280]}};

assign tmp_306_fu_2201_p4 = {{w12_V_q0[307:294]}};

assign tmp_307_fu_2224_p4 = {{w12_V_q0[321:308]}};

assign tmp_308_fu_2247_p4 = {{w12_V_q0[335:322]}};

assign tmp_309_fu_2270_p4 = {{w12_V_q0[349:336]}};

assign tmp_310_fu_2293_p4 = {{w12_V_q0[363:350]}};

assign tmp_311_fu_2316_p4 = {{w12_V_q0[377:364]}};

assign tmp_312_fu_2339_p4 = {{w12_V_q0[391:378]}};

assign tmp_313_fu_2362_p4 = {{w12_V_q0[405:392]}};

assign tmp_314_fu_2385_p4 = {{w12_V_q0[419:406]}};

assign tmp_315_fu_2408_p4 = {{w12_V_q0[433:420]}};

assign tmp_316_fu_2431_p4 = {{w12_V_q0[447:434]}};

assign tmp_317_fu_2454_p4 = {{w12_V_q0[461:448]}};

assign tmp_318_fu_2477_p4 = {{w12_V_q0[475:462]}};

assign tmp_319_fu_2500_p4 = {{w12_V_q0[489:476]}};

assign tmp_320_fu_2523_p4 = {{w12_V_q0[503:490]}};

assign tmp_321_fu_2546_p4 = {{w12_V_q0[517:504]}};

assign tmp_322_fu_2569_p4 = {{w12_V_q0[531:518]}};

assign tmp_323_fu_2592_p4 = {{w12_V_q0[545:532]}};

assign tmp_324_fu_2615_p4 = {{w12_V_q0[559:546]}};

assign tmp_325_fu_2638_p4 = {{w12_V_q0[573:560]}};

assign tmp_326_fu_2661_p4 = {{w12_V_q0[587:574]}};

assign tmp_327_fu_2684_p4 = {{w12_V_q0[601:588]}};

assign tmp_328_fu_2707_p4 = {{w12_V_q0[615:602]}};

assign tmp_329_fu_2730_p4 = {{w12_V_q0[629:616]}};

assign tmp_330_fu_2753_p4 = {{w12_V_q0[643:630]}};

assign tmp_331_fu_2776_p4 = {{w12_V_q0[657:644]}};

assign tmp_5_fu_2799_p4 = {{w12_V_q0[670:658]}};

assign trunc_ln332_fu_1716_p1 = w12_V_q0[13:0];

assign trunc_ln708_231_fu_1778_p4 = {{mul_ln1118_241_fu_3521_p2[31:14]}};

assign trunc_ln708_232_fu_1801_p4 = {{mul_ln1118_242_fu_3528_p2[31:14]}};

assign trunc_ln708_233_fu_1824_p4 = {{mul_ln1118_243_fu_3535_p2[31:14]}};

assign trunc_ln708_234_fu_1847_p4 = {{mul_ln1118_244_fu_3542_p2[31:14]}};

assign trunc_ln708_235_fu_1870_p4 = {{mul_ln1118_245_fu_3549_p2[31:14]}};

assign trunc_ln708_236_fu_1893_p4 = {{mul_ln1118_246_fu_3556_p2[31:14]}};

assign trunc_ln708_237_fu_1916_p4 = {{mul_ln1118_247_fu_3563_p2[31:14]}};

assign trunc_ln708_238_fu_1939_p4 = {{mul_ln1118_248_fu_3570_p2[31:14]}};

assign trunc_ln708_239_fu_1962_p4 = {{mul_ln1118_249_fu_3577_p2[31:14]}};

assign trunc_ln708_240_fu_1985_p4 = {{mul_ln1118_250_fu_3584_p2[31:14]}};

assign trunc_ln708_241_fu_2008_p4 = {{mul_ln1118_251_fu_3591_p2[31:14]}};

assign trunc_ln708_242_fu_2031_p4 = {{mul_ln1118_252_fu_3598_p2[31:14]}};

assign trunc_ln708_243_fu_2054_p4 = {{mul_ln1118_253_fu_3605_p2[31:14]}};

assign trunc_ln708_244_fu_2077_p4 = {{mul_ln1118_254_fu_3612_p2[31:14]}};

assign trunc_ln708_245_fu_2100_p4 = {{mul_ln1118_255_fu_3619_p2[31:14]}};

assign trunc_ln708_246_fu_2123_p4 = {{mul_ln1118_256_fu_3626_p2[31:14]}};

assign trunc_ln708_247_fu_2146_p4 = {{mul_ln1118_257_fu_3633_p2[31:14]}};

assign trunc_ln708_248_fu_2169_p4 = {{mul_ln1118_258_fu_3640_p2[31:14]}};

assign trunc_ln708_249_fu_2192_p4 = {{mul_ln1118_259_fu_3647_p2[31:14]}};

assign trunc_ln708_250_fu_2215_p4 = {{mul_ln1118_260_fu_3654_p2[31:14]}};

assign trunc_ln708_251_fu_2238_p4 = {{mul_ln1118_261_fu_3661_p2[31:14]}};

assign trunc_ln708_252_fu_2261_p4 = {{mul_ln1118_262_fu_3668_p2[31:14]}};

assign trunc_ln708_253_fu_2284_p4 = {{mul_ln1118_263_fu_3675_p2[31:14]}};

assign trunc_ln708_254_fu_2307_p4 = {{mul_ln1118_264_fu_3682_p2[31:14]}};

assign trunc_ln708_255_fu_2330_p4 = {{mul_ln1118_265_fu_3689_p2[31:14]}};

assign trunc_ln708_256_fu_2353_p4 = {{mul_ln1118_266_fu_3696_p2[31:14]}};

assign trunc_ln708_257_fu_2376_p4 = {{mul_ln1118_267_fu_3703_p2[31:14]}};

assign trunc_ln708_258_fu_2399_p4 = {{mul_ln1118_268_fu_3710_p2[31:14]}};

assign trunc_ln708_259_fu_2422_p4 = {{mul_ln1118_269_fu_3717_p2[31:14]}};

assign trunc_ln708_260_fu_2445_p4 = {{mul_ln1118_270_fu_3724_p2[31:14]}};

assign trunc_ln708_261_fu_2468_p4 = {{mul_ln1118_271_fu_3731_p2[31:14]}};

assign trunc_ln708_262_fu_2491_p4 = {{mul_ln1118_272_fu_3738_p2[31:14]}};

assign trunc_ln708_263_fu_2514_p4 = {{mul_ln1118_273_fu_3745_p2[31:14]}};

assign trunc_ln708_264_fu_2537_p4 = {{mul_ln1118_274_fu_3752_p2[31:14]}};

assign trunc_ln708_265_fu_2560_p4 = {{mul_ln1118_275_fu_3759_p2[31:14]}};

assign trunc_ln708_266_fu_2583_p4 = {{mul_ln1118_276_fu_3766_p2[31:14]}};

assign trunc_ln708_267_fu_2606_p4 = {{mul_ln1118_277_fu_3773_p2[31:14]}};

assign trunc_ln708_268_fu_2629_p4 = {{mul_ln1118_278_fu_3780_p2[31:14]}};

assign trunc_ln708_269_fu_2652_p4 = {{mul_ln1118_279_fu_3787_p2[31:14]}};

assign trunc_ln708_270_fu_2675_p4 = {{mul_ln1118_280_fu_3794_p2[31:14]}};

assign trunc_ln708_271_fu_2698_p4 = {{mul_ln1118_281_fu_3801_p2[31:14]}};

assign trunc_ln708_272_fu_2721_p4 = {{mul_ln1118_282_fu_3808_p2[31:14]}};

assign trunc_ln708_273_fu_2744_p4 = {{mul_ln1118_283_fu_3815_p2[31:14]}};

assign trunc_ln708_274_fu_2767_p4 = {{mul_ln1118_284_fu_3822_p2[31:14]}};

assign trunc_ln708_275_fu_2790_p4 = {{mul_ln1118_285_fu_3829_p2[31:14]}};

assign trunc_ln708_276_fu_2813_p4 = {{mul_ln1118_286_fu_3836_p2[30:14]}};

assign trunc_ln708_s_fu_1755_p4 = {{mul_ln1118_240_fu_3514_p2[31:14]}};

assign trunc_ln_fu_1732_p4 = {{mul_ln1118_fu_3507_p2[31:14]}};

assign w12_V_address0 = zext_ln332_fu_1710_p1;

assign zext_ln317_fu_1615_p1 = i1_0_i_reg_962;

assign zext_ln332_fu_1710_p1 = in_index_reg_1549;

assign zext_ln340_fu_3416_p1 = i_ic_0_i_reg_1560;

always @ (posedge ap_clk) begin
    shl_ln731_2_reg_4394[2:0] <= 3'b000;
    shl_ln731_3_reg_4399[2:0] <= 3'b000;
    shl_ln731_4_reg_4404[2:0] <= 3'b000;
    shl_ln731_5_reg_4409[2:0] <= 3'b000;
    shl_ln731_6_reg_4414[2:0] <= 3'b000;
    shl_ln731_7_reg_4419[2:0] <= 3'b000;
    shl_ln731_8_reg_4424[2:0] <= 3'b000;
    shl_ln731_9_reg_4429[2:0] <= 3'b000;
    shl_ln731_10_reg_4434[2:0] <= 3'b000;
    shl_ln731_11_reg_4439[2:0] <= 3'b000;
    shl_ln731_12_reg_4444[2:0] <= 3'b000;
    shl_ln731_13_reg_4449[2:0] <= 3'b000;
    shl_ln731_14_reg_4454[2:0] <= 3'b000;
    shl_ln731_15_reg_4459[2:0] <= 3'b000;
    shl_ln731_16_reg_4464[2:0] <= 3'b000;
    shl_ln731_17_reg_4469[2:0] <= 3'b000;
    shl_ln731_18_reg_4474[2:0] <= 3'b000;
    shl_ln731_19_reg_4479[2:0] <= 3'b000;
    shl_ln731_20_reg_4484[2:0] <= 3'b000;
    shl_ln731_21_reg_4489[2:0] <= 3'b000;
    shl_ln731_22_reg_4494[2:0] <= 3'b000;
    shl_ln731_23_reg_4499[2:0] <= 3'b000;
    shl_ln731_24_reg_4504[2:0] <= 3'b000;
    shl_ln731_25_reg_4509[2:0] <= 3'b000;
    shl_ln731_26_reg_4514[2:0] <= 3'b000;
    shl_ln731_27_reg_4519[2:0] <= 3'b000;
    shl_ln731_28_reg_4524[2:0] <= 3'b000;
    shl_ln731_29_reg_4529[2:0] <= 3'b000;
    shl_ln731_30_reg_4534[2:0] <= 3'b000;
    shl_ln731_31_reg_4539[2:0] <= 3'b000;
    shl_ln731_32_reg_4544[2:0] <= 3'b000;
    shl_ln731_33_reg_4549[2:0] <= 3'b000;
    shl_ln731_34_reg_4554[2:0] <= 3'b000;
    shl_ln731_35_reg_4559[2:0] <= 3'b000;
    shl_ln731_36_reg_4564[2:0] <= 3'b000;
    shl_ln731_37_reg_4569[2:0] <= 3'b000;
    shl_ln731_38_reg_4574[2:0] <= 3'b000;
    shl_ln731_39_reg_4579[2:0] <= 3'b000;
    shl_ln731_40_reg_4584[2:0] <= 3'b000;
    shl_ln731_41_reg_4589[2:0] <= 3'b000;
    shl_ln731_42_reg_4594[2:0] <= 3'b000;
    shl_ln731_43_reg_4599[2:0] <= 3'b000;
    shl_ln731_44_reg_4604[2:0] <= 3'b000;
    shl_ln731_45_reg_4609[2:0] <= 3'b000;
    shl_ln731_46_reg_4614[2:0] <= 3'b000;
    shl_ln731_47_reg_4619[2:0] <= 3'b000;
end

endmodule //conv_2d_cl_ss_ap_fixed_ap_fixed_18_8_5_3_0_config12_s
